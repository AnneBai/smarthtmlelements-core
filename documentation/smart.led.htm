<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>Led API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">checked</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the check state.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>checked</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led checked&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>checked</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.checked = false;</PRE><br/>
 

							<P>Get the <strong>checked</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let checked = led.checked;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">clickMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						release
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the click mode of the LED. Possible values:  'press', 'release', 'pressAndRelease'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>clickMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led click-mode='press'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>clickMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.clickMode = 'pressAndRelease';</PRE><br/>
 

							<P>Get the <strong>clickMode</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let clickMode = led.clickMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the LED.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led disabled&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let disabled = led.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">falseContent</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the text representation of checked=false state.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>falseContent</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led false-content='OFF'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>falseContent</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.falseContent = 'False';</PRE><br/>
 

							<P>Get the <strong>falseContent</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let falseContent = led.falseContent;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">falseTemplate</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets custom template about LED's false state.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>falseTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led false-template='templateId1'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>falseTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.falseTemplate = 'templateId2';</PRE><br/>
 

							<P>Get the <strong>falseTemplate</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let falseTemplate = led.falseTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">indeterminate</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets indeterminate state of the LED.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>indeterminate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led indeterminate&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>indeterminate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.indeterminate = false;</PRE><br/>
 

							<P>Get the <strong>indeterminate</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let indeterminate = led.indeterminate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">indeterminateContent</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the text representation of checked=null state.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>indeterminateContent</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led indeterminate-content='NULL'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>indeterminateContent</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.indeterminateContent = 'Indeterminate';</PRE><br/>
 

							<P>Get the <strong>indeterminateContent</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let indeterminateContent = led.indeterminateContent;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">indeterminateTemplate</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets custom template about LED's indeterminate state.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>indeterminateTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led indeterminate-template='templateId1'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>indeterminateTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.indeterminateTemplate = 'templateId2';</PRE><br/>
 

							<P>Get the <strong>indeterminateTemplate</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let indeterminateTemplate = led.indeterminateTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">name</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's name.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led name='Name'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>name</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.name = 'New Name';</PRE><br/>
 

							<P>Get the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let name = led.name;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If the widgets is readonly, the users cannot iteract with the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led readonly&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.readonly = true;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let readonly = led.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">shape</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						round
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the shape of LED. Possible values:  'round', 'square'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>shape</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led shape='square'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>shape</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.shape = 'round';</PRE><br/>
 

							<P>Get the <strong>shape</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let shape = led.shape;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">trueContent</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the text representation of checked=true state.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>trueContent</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led true-content='ON'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>trueContent</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.trueContent = 'True';</PRE><br/>
 

							<P>Get the <strong>trueContent</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let trueContent = led.trueContent;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">trueTemplate</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets custom template about LED's true state.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>trueTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led true-template='templateId1'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>trueTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.trueTemplate = 'templateId2';</PRE><br/>
 

							<P>Get the <strong>trueTemplate</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let trueTemplate = led.trueTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">value</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-led value='Value'&gt;&lt;/smart-led&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
 
							<PRE class="prettyprint"> led.value = 'New Value';</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> const led = document.querySelector('smart-led');</PRE>
							<PRE class="prettyprint"> let value = led.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the widget is checked/unchecked.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartLed
							</p>
							<p>
								<PRE class="prettyprint"> const led = document.querySelector('smart-led'); </PRE>
<PRE class="prettyprint"> led.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

			</tbody>
		</table>
	</div>
</body>
</html>