<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>TextBox API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">autoFocus</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifyes that a text box should have focus when the page loads.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>autoFocus</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box auto-focus&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>autoFocus</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.autoFocus = false;</PRE><br/>
 

							<P>Get the <strong>autoFocus</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let autoFocus = textBox.autoFocus;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">autoComplete</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						manual
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the autocomplete mode:<br /> - none: autocomplete is disabled. When the popup is triggered, the suggested values it contains are the same regardless of the characters typed in the textbox. For example, the popup suggests a set of recently entered values, and the suggestions do not change as the user types.<br /> - auto: When the popup is triggered, it presents suggested values that complete or logically correspond to the characters typed in the textbox, and the first suggestion is automatically highlighted as selected. The automatically selected suggestion becomes the value of the textbox when the combobox loses focus unless the user chooses a different suggestion or changes the character string in the textbox.<br /> - manual: When the popup is triggered, it presents suggested values that complete or logically correspond to the characters typed in the textbox. The character string the user has typed will become the value of the textbox unless the user selects a value in the popup.<br /> - inline: This is the same as list with automatic selection with one additional feature. The portion of the selected suggestion that has not been typed by the user, a completion string, appears inline after the input cursor in the textbox. The inline completion string is visually highlighted and has a selected state. Possible values:  'none', 'auto', 'manual', 'inline'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>autoComplete</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box auto-complete='auto'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>autoComplete</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.autoComplete = 'manual';</PRE><br/>
 

							<P>Get the <strong>autoComplete</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let autoComplete = textBox.autoComplete;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">dataSource</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the data source that will be loaded in the drop down list as suggested items.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box data-source='["item 1", "item 2"]'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>dataSource</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.dataSource = ["new item 1", "new item 2"];</PRE><br/>
 

							<P>Get the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let dataSource = textBox.dataSource;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box disabled&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let disabled = textBox.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">displayLoadingIndicator</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Displays or hides the loading indicator</p>
							<h4>Code examples</h4>

							<P>Set the <strong>displayLoadingIndicator</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box display-loading-indicator&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>displayLoadingIndicator</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.displayLoadingIndicator = false;</PRE><br/>
 

							<P>Get the <strong>displayLoadingIndicator</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let displayLoadingIndicator = textBox.displayLoadingIndicator;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">displayMember</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the displayMember. The displayMember specifies the name of an object property to display. The name is contained in the collection specified by the 'dataSource' property.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>displayMember</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box display-member='label'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>displayMember</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.displayMember = 'name';</PRE><br/>
 

							<P>Get the <strong>displayMember</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let displayMember = textBox.displayMember;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">displayMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						default
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifies how characters are displayed in text box. Possible values:  'escaped', 'default'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>displayMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box display-mode='escaped'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>displayMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.displayMode = 'default';</PRE><br/>
 

							<P>Get the <strong>displayMode</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let displayMode = textBox.displayMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">dropDownHeight</span>
					</td>
					<td>
						<span>string?</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the height of the drop down. Default value of null means that CSS variables are used. This property should be used when the browser doesn"t support CSS variables.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dropDownHeight</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box drop-down-height='auto'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>dropDownHeight</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.dropDownHeight = 500;</PRE><br/>
 

							<P>Get the <strong>dropDownHeight</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let dropDownHeight = textBox.dropDownHeight;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">dropDownWidth</span>
					</td>
					<td>
						<span>string?</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the width of the drop down. Default value of null means that CSS variables are used. This property should be used when the browser doesn"t support CSS variables.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dropDownWidth</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box drop-down-width='auto'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>dropDownWidth</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.dropDownWidth = 500;</PRE><br/>
 

							<P>Get the <strong>dropDownWidth</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let dropDownWidth = textBox.dropDownWidth;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">filterMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						startsWithIgnoreCase
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the filtering for the drop down list mode. Possible values:  'none', 'contains', 'containsIgnoreCase', 'equals', 'equalsIgnoreCase', 'startsWith', 'startsWithIgnoreCase', 'endsWith', 'endsWithIgnoreCase', 'matchMetaData'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>filterMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box filter-mode='contains'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>filterMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.filterMode = 'equals';</PRE><br/>
 

							<P>Get the <strong>filterMode</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let filterMode = textBox.filterMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">form</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The form element that the element is associated with (its "form owner"). The value of the attribute must be the ID of a form element in the same document.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>form</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box form='form1'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>form</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.form = 'form2';</PRE><br/>
 

							<P>Get the <strong>form</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let form = textBox.form;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">hint</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets additional helper text below the element. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>hint</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box hint='Helper text'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>hint</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.hint = Hint;</PRE><br/>
 

							<P>Get the <strong>hint</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let hint = textBox.hint;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">itemHeight</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the height of the items.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>itemHeight</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box item-height='20'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>itemHeight</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.itemHeight = 'auto';</PRE><br/>
 

							<P>Get the <strong>itemHeight</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let itemHeight = textBox.itemHeight;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">itemTemplate</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The itemTemplate property is a string that represents the id of an HTMLTemplateElement in the DOM. It's used to load list items from the HTMLTemplateElement.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box item-template='templateA'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>itemTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.itemTemplate = 'templateB';</PRE><br/>
 

							<P>Get the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let itemTemplate = textBox.itemTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">label</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets label above the element. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>label</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box label='Helper text'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>label</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.label = 'Hint';</PRE><br/>
 

							<P>Get the <strong>label</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let label = textBox.label;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">loadingIndicatorPlaceholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						Loading...
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the text that will be displayed next to the loading indicator when the loader is visible and it's position is top or bottom.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>loadingIndicatorPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box loading-indicator-placeholder='Incoming data'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>loadingIndicatorPlaceholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.loadingIndicatorPlaceholder = 'LOADING...';</PRE><br/>
 

							<P>Get the <strong>loadingIndicatorPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let loadingIndicatorPlaceholder = textBox.loadingIndicatorPlaceholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">loadingIndicatorPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						center
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The position of the loading indicator. Possible values:  'bottom', 'center', 'top'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>loadingIndicatorPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box loading-indicator-position='bottom'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>loadingIndicatorPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.loadingIndicatorPosition = 'top';</PRE><br/>
 

							<P>Get the <strong>loadingIndicatorPosition</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let loadingIndicatorPosition = textBox.loadingIndicatorPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">maxLength</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets/gets the maximum number of characters that the user can enter.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>maxLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box max-length='120'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>maxLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.maxLength = 150;</PRE><br/>
 

							<P>Get the <strong>maxLength</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let maxLength = textBox.maxLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">minLength</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						2
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets/gets the minimum number of characters that the user have to enter to trigger the autocomplete popup.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>minLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box min-length='1'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>minLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.minLength = 3;</PRE><br/>
 

							<P>Get the <strong>minLength</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let minLength = textBox.minLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "missingReference": "{{elementType}}: Missing reference to {{files}}." } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box messages='{ "de": { "missingReference": "smartTank: Fehlende Bezugnahme auf {{files}}." } }'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.messages = { "de": { "missingReference": "smartTank: Fehlende Bezugnahme auf {{files}}." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let messages = textBox.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">name</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The name of the control.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box name='TextArea'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>name</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.name = 'textarea';</PRE><br/>
 

							<P>Get the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let name = textBox.name;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">placeholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>A hint to the user of what can be entered in the control. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box placeholder='Placeholder'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>placeholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.placeholder = 'PlaceHolder';</PRE><br/>
 

							<P>Get the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let placeholder = textBox.placeholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If the widgets is readonly, the users cannot iteract with the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box readonly&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.readonly = true;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let readonly = textBox.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">required</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifies that the user must fill in a value before submitting a form</p>
							<h4>Code examples</h4>

							<P>Set the <strong>required</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box required&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>required</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.required = false;</PRE><br/>
 

							<P>Get the <strong>required</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let required = textBox.required;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">selectAllOnFocus</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifies whether the content of the Text Area will be selected on focus.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectAllOnFocus</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box select-all-on-focus&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>selectAllOnFocus</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.selectAllOnFocus = false;</PRE><br/>
 

							<P>Get the <strong>selectAllOnFocus</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let selectAllOnFocus = textBox.selectAllOnFocus;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">value</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value of the text box. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box value='Demo value.'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.value = 'New demo value.';</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let value = textBox.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">valueMember</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the value member of an item. Stored as value in the item object.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>valueMember</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-text-box value-member='value'&gt;&lt;/smart-text-box&gt;</PRE><br/>							<P>Set the <strong>valueMember</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
 
							<PRE class="prettyprint"> textBox.valueMember = 'newValue';</PRE><br/>
 

							<P>Get the <strong>valueMember</strong> property. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box');</PRE>
							<PRE class="prettyprint"> let valueMember = textBox.valueMember;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value of the Text Box is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartTextBox
							</p>
							<p>
								<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box'); </PRE>
<PRE class="prettyprint"> textBox.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">focus</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Focuses the text box. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>focus</strong> method. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box'); </PRE>
 							<PRE class="prettyprint"> textBox.focus(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">reset</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								The method is used to reset text box to it's initial value.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>reset</strong> method. </P>
							<PRE class="prettyprint"> let textBox = document.querySelector('smart-text-box'); </PRE>
 							<PRE class="prettyprint"> textBox.reset(); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>