<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>Gauge API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">analogDisplayType</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						needle
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the type of gauge's indicator Possible values:  'needle', 'fill', 'line'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>analogDisplayType</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge analog-display-type='fill'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>analogDisplayType</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.analogDisplayType = 'line';</PRE><br/>
 

							<P>Get the <strong>analogDisplayType</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let analogDisplayType = gauge.analogDisplayType;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">coerce</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>With the coerce property true, the value is set to the nearest value allowed by the interval property. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>coerce</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge coerce&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>coerce</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.coerce = false;</PRE><br/>
 

							<P>Get the <strong>coerce</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let coerce = gauge.coerce;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">decimalSeparator</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						"."
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the char to use as the decimal separator in numeric values. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge decimal-separator=','&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>decimalSeparator</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.decimalSeparator = '.';</PRE><br/>
 

							<P>Get the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let decimalSeparator = gauge.decimalSeparator;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">digitalDisplay</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the digital display of the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>digitalDisplay</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge digital-display&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>digitalDisplay</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.digitalDisplay = false;</PRE><br/>
 

							<P>Get the <strong>digitalDisplay</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let digitalDisplay = gauge.digitalDisplay;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">digitalDisplayPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						bottom
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the position of the digital display. Possible values:  'top', 'bottom', 'right', 'left', 'center'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>digitalDisplayPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge digital-display-position='Placeholder'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>digitalDisplayPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.digitalDisplayPosition = 'New Placeholder';</PRE><br/>
 

							<P>Get the <strong>digitalDisplayPosition</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let digitalDisplayPosition = gauge.digitalDisplayPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge disabled&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let disabled = gauge.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">drawNeedle</span>
					</td>
					<td>
						<span>function</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Callback function which allows rendering on a custom needle. Applicable only on analogDisplayType needle.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>drawNeedle</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge draw-needle='null'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>drawNeedle</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.drawNeedle = customDrawNeedleFunction;</PRE><br/>
 

							<P>Get the <strong>drawNeedle</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let drawNeedle = gauge.drawNeedle;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">endAngle</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						210
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets gauge's endAngle. This property specifies the end of the gauge's scale and is measured in degrees.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>endAngle</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge end-angle='150'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>endAngle</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.endAngle = 300;</PRE><br/>
 

							<P>Get the <strong>endAngle</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let endAngle = gauge.endAngle;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">interval</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						1
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>When cooerce property is true, all values coerce to the interval's value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>interval</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge interval='2'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>interval</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.interval = 10;</PRE><br/>
 

							<P>Get the <strong>interval</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let interval = gauge.interval;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">inverted</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the direction of the gauge. If is true - positions of the gauge's start and end are changed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>inverted</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge inverted&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>inverted</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.inverted = false;</PRE><br/>
 

							<P>Get the <strong>inverted</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let inverted = gauge.inverted;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">labelFormatFunction</span>
					</td>
					<td>
						<span>function</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>A callback function that can be used to format the values displayed on the gauge labels.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>labelFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge label-format-function='function (value) { return value + '%'; }'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>labelFormatFunction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.labelFormatFunction = function (value) { return value + '$'; };</PRE><br/>
 

							<P>Get the <strong>labelFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let labelFormatFunction = gauge.labelFormatFunction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">labelsVisibility</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						all
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's label visibility Possible values:  'all', 'endPoints', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>labelsVisibility</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge labels-visibility='endPoints'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>labelsVisibility</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.labelsVisibility = 'none';</PRE><br/>
 

							<P>Get the <strong>labelsVisibility</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let labelsVisibility = gauge.labelsVisibility;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">language</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						en
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the language. Used in conjunction with the property <strong>messages</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>language</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge language='de'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>language</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.language = 'fr';</PRE><br/>
 

							<P>Get the <strong>language</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let language = gauge.language;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">logarithmicScale</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables the usage of logarithmic scale in the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>logarithmicScale</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge logarithmic-scale&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>logarithmicScale</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.logarithmicScale = false;</PRE><br/>
 

							<P>Get the <strong>logarithmicScale</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let logarithmicScale = gauge.logarithmicScale;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">max</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						100
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the maximum value of the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge max='20'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>max</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.max = 50;</PRE><br/>
 

							<P>Get the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let max = gauge.max;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">mechanicalAction</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						switchWhileDragging
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the type of used mechanical action. Possible values:  'switchUntilReleased', 'switchWhenReleased', 'switchWhileDragging'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>mechanicalAction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge mechanical-action='switchUntilReleased'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>mechanicalAction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.mechanicalAction = 'switchWhenReleased';</PRE><br/>
 

							<P>Get the <strong>mechanicalAction</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let mechanicalAction = gauge.mechanicalAction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "missingReference": "{{elementType}}: Missing reference to {{files}}.", "significantPrecisionDigits": "{{elementType}}: the properties significantDigits and precisionDigits cannot be set at the same time.", "invalidMinOrMax": "{{elementType}}: Invalid {{property}} value. Max cannot be lower than Min.", "noInteger": "{{elementType}}: precisionDigits could be set only on floatingPoint scaleType." } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge messages='{ "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "significantPrecisionDigits": "{{elementType}}: Die Eigenschaften significantDigits und precisionDigits koennen nicht gleichzeitig eingestellt werden.", "invalidMinOrMax": "{{elementType}}: Ungültiger Wert {{property}}. Max darf nicht niedriger sein als Min.", "noInteger": "{{elementType}}: PrecisionDigits konnte nur auf floatingPoint scaleType gesetzt werden." } }'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.messages = { "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "significantPrecisionDigits": "{{elementType}}: Die Eigenschaften significantDigits und precisionDigits koennen nicht gleichzeitig eingestellt werden.", "invalidMinOrMax": "{{elementType}}: Ungültiger Wert {{property}}. Max darf nicht niedriger sein als Min.", "noInteger": "{{elementType}}: PrecisionDigits konnte nur auf floatingPoint scaleType gesetzt werden." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let messages = gauge.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">min</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the minimum value of the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge min='20'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>min</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.min = 50;</PRE><br/>
 

							<P>Get the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let min = gauge.min;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">needlePosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						center
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the position of the needle when <strong>analogDisplayType</strong> is <em>'needle'</em>.  Possible values:  'center', 'edge'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>needlePosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge needle-position='center'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>needlePosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.needlePosition = 'edge';</PRE><br/>
 

							<P>Get the <strong>needlePosition</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let needlePosition = gauge.needlePosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">precisionDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the number of digits after the decimal point. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge precision-digits='5'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>precisionDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.precisionDigits = 6;</PRE><br/>
 

							<P>Get the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let precisionDigits = gauge.precisionDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">ranges</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>This property is array of objects. Each object is different range. The range is colored area with specified size.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>ranges</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge ranges='[{ startValue: 0, endValue: 50, className: 'range1' }, { startValue: 50, endValue: 100, className: 'range2' }]'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>ranges</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.ranges = [{ startValue: 0, endValue: 60, className: 'range1' }, { startValue: 60, endValue: 100, className: 'range2' }];</PRE><br/>
 

							<P>Get the <strong>ranges</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let ranges = gauge.ranges;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>When the widget is read only the users cannot interact with it.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge readonly&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.readonly = true;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let readonly = gauge.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">scalePosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						inside
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the position of the widget's scales.  Possible values:  'outside', 'inside', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scalePosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge scale-position='inside'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>scalePosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.scalePosition = 'outside';</PRE><br/>
 

							<P>Get the <strong>scalePosition</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let scalePosition = gauge.scalePosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">scaleType</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						floatingPoint
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the type of the gauge's scale.  Possible values:  'floatingPoint', 'integer'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scaleType</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge scale-type='integer'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>scaleType</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.scaleType = 'floatingPoint';</PRE><br/>
 

							<P>Get the <strong>scaleType</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let scaleType = gauge.scaleType;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">scientificNotation</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables scientific notation.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge scientific-notation&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>scientificNotation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.scientificNotation = true;</PRE><br/>
 

							<P>Get the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let scientificNotation = gauge.scientificNotation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">showRanges</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>This property indicates whether the gauge's ranges will be visible.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>showRanges</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge show-ranges&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>showRanges</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.showRanges = true;</PRE><br/>
 

							<P>Get the <strong>showRanges</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let showRanges = gauge.showRanges;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">showUnit</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables displaying of the units.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge show-unit&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>showUnit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.showUnit = false;</PRE><br/>
 

							<P>Get the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let showUnit = gauge.showUnit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">significantDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determining how many significant digits are in a number. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge significant-digits='1'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>significantDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.significantDigits = 2;</PRE><br/>
 

							<P>Get the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let significantDigits = gauge.significantDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">sizeMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						circle
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the size mode of the Gauge. If set to 'circle', the Gauge's width and height are always equal. If set to 'auto', the height of the Gauge is determined based on the plotted internal elements. Possible values:  'circle', 'auto'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>sizeMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge size-mode='auto'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>sizeMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.sizeMode = 'circle';</PRE><br/>
 

							<P>Get the <strong>sizeMode</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let sizeMode = gauge.sizeMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">startAngle</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						-30
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets gauge's startAngle. This property specifies the beggining of the gauge's scale and is measured in degrees.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>startAngle</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge start-angle='0'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>startAngle</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.startAngle = 20;</PRE><br/>
 

							<P>Get the <strong>startAngle</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let startAngle = gauge.startAngle;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan30">ticksPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						scale
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the ticks in the Gauge. The <em>'track'</em> option only takes effect if <strong>analogDisplayType</strong> is not <em>'needle'</em>. Possible values:  'scale', 'track'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>ticksPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge ticks-position='track'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>ticksPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.ticksPosition = 'scale';</PRE><br/>
 

							<P>Get the <strong>ticksPosition</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let ticksPosition = gauge.ticksPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan31">ticksVisibility</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						minor
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the visibility of the ticks. Possible values:  'major', 'minor', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>ticksVisibility</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge ticks-visibility='major'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>ticksVisibility</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.ticksVisibility = 'none';</PRE><br/>
 

							<P>Get the <strong>ticksVisibility</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let ticksVisibility = gauge.ticksVisibility;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan32">unit</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						kg
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the name of unit used in the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge unit='mm'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>unit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.unit = 'cm';</PRE><br/>
 

							<P>Get the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let unit = gauge.unit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan33">value</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value of the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge value='50'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.value = 100;</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let value = gauge.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan34">wordLength</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						int32
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the word length. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>. Possible values:  'int8', 'uint8', 'int16', 'uint16', 'int32', 'uint32', 'int64', 'uint64'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-gauge word-length='int8'&gt;&lt;/smart-gauge&gt;</PRE><br/>							<P>Set the <strong>wordLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
 
							<PRE class="prettyprint"> gauge.wordLength = 'int16';</PRE><br/>
 

							<P>Get the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge');</PRE>
							<PRE class="prettyprint"> let wordLength = gauge.wordLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan35">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value of the widget is changed using the mouse or keyboard.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartGauge
							</p>
							<p>
								<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge'); </PRE>
<PRE class="prettyprint"> gauge.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan36">getOptimalSize</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Gets the optimal size of the widget (the current width and the height based on the plotted internal elements). 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>Object</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>getOptimalSize</strong> method. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge'); </PRE>
 							<PRE class="prettyprint"> gauge.getOptimalSize(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan37">val</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Get/set the value of the gauge. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>value</em></td>
											<td><em>string/number</em></td>
											<td><em>The value to be set. If no parameter is passed, returns the displayed value of the gauge. </em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>String</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>val</strong> method. </P>
							<PRE class="prettyprint"> let gauge = document.querySelector('smart-gauge'); </PRE>
 							<PRE class="prettyprint"> gauge.val(10); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>