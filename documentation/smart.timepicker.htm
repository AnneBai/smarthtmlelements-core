<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>TimePicker API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">autoSwitchToMinutes</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether after selecting hours, the element will automatically switch to minute selection.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>autoSwitchToMinutes</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker auto-switch-to-minutes&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>autoSwitchToMinutes</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.autoSwitchToMinutes = false;</PRE><br/>
 

							<P>Get the <strong>autoSwitchToMinutes</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let autoSwitchToMinutes = timePicker.autoSwitchToMinutes;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker disabled&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let disabled = timePicker.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">footer</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether the footer is shown.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>footer</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker footer&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>footer</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.footer = false;</PRE><br/>
 

							<P>Get the <strong>footer</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let footer = timePicker.footer;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">footerTemplate</span>
					</td>
					<td>
						<span>string/HTMLTemplateElement</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the footer template. The value of this property can be the id of an HTMLTemplateElement or the HTMLTemplateElement itself. If set to <em>null</em>, a default, empty, template is applied.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>footerTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker footer-template='template1'&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>footerTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.footerTemplate = document.getElementsByTagName('template')[0];</PRE><br/>
 

							<P>Get the <strong>footerTemplate</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let footerTemplate = timePicker.footerTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">format</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						12-hour
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the whether hour selection format is using a 12-hour or 24-hour clock convention. Possible values:  '12-hour', '24-hour'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>format</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker format='24-hour'&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>format</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.format = '12-hour';</PRE><br/>
 

							<P>Get the <strong>format</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let format = timePicker.format;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">minuteInterval</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						1
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the step when selecting minutes.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>minuteInterval</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker minute-interval='5'&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>minuteInterval</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.minuteInterval = 15;</PRE><br/>
 

							<P>Get the <strong>minuteInterval</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let minuteInterval = timePicker.minuteInterval;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Disables user interaction with the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker readonly&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.readonly = false;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let readonly = timePicker.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">selection</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						hour
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether hour or minute selection is currently enabled. Possible values:  'hour', 'minute'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selection</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker selection='minute'&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>selection</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.selection = 'hour';</PRE><br/>
 

							<P>Get the <strong>selection</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let selection = timePicker.selection;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">value</span>
					</td>
					<td>
						<span>Date</span>
					</td>
					<td>
						new Date()
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker value='new Date(2017, 0, 1, 20, 33)'&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.value = new Date(2017, 10, 5, 1, 12);</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let value = timePicker.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">view</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						portrait
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether the element is in landscape or portrait orientation. Possible values:  'landscape', 'portrait'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>view</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-time-picker view='portrait'&gt;&lt;/smart-time-picker&gt;</PRE><br/>							<P>Set the <strong>view</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
 
							<PRE class="prettyprint"> timePicker.view = 'landscape';</PRE><br/>
 

							<P>Get the <strong>view</strong> property. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker');</PRE>
							<PRE class="prettyprint"> let view = timePicker.view;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartTimePicker
							</p>
							<p>
								<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker'); </PRE>
<PRE class="prettyprint"> timePicker.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">setHours</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Sets the hours.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>hours</em></td>
											<td><em>Number</em></td>
											<td><em>The hours to set.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>setHours</strong> method. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker'); </PRE>
 							<PRE class="prettyprint"> timePicker.setHours(5); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">setMinutes</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Sets the minutes.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>minutes</em></td>
											<td><em>Number</em></td>
											<td><em>The minutes to set.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>setMinutes</strong> method. </P>
							<PRE class="prettyprint"> const timePicker = document.querySelector('smart-time-picker'); </PRE>
 							<PRE class="prettyprint"> timePicker.setMinutes(5); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>