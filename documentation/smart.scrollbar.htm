<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>ScrollBar API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-scroll-bar disabled&gt;&lt;/smart-scroll-bar&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
 
							<PRE class="prettyprint"> scrollBar.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
							<PRE class="prettyprint"> let disabled = scrollBar.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">largeStep</span>
					</td>
					<td>
						<span>integer</span>
					</td>
					<td>
						100
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the scrollbar's largestep. The value is increased/decreased with this largestep when the user presses the left mouse button in the area between a scrollbar button and thumb.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>largeStep</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-scroll-bar large-step='20'&gt;&lt;/smart-scroll-bar&gt;</PRE><br/>							<P>Set the <strong>largeStep</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
 
							<PRE class="prettyprint"> scrollBar.largeStep = 50;</PRE><br/>
 

							<P>Get the <strong>largeStep</strong> property. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
							<PRE class="prettyprint"> let largeStep = scrollBar.largeStep;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">max</span>
					</td>
					<td>
						<span>integer</span>
					</td>
					<td>
						1000
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the scrollbar's maximum value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-scroll-bar max='200'&gt;&lt;/smart-scroll-bar&gt;</PRE><br/>							<P>Set the <strong>max</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
 
							<PRE class="prettyprint"> scrollBar.max = 500;</PRE><br/>
 

							<P>Get the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
							<PRE class="prettyprint"> let max = scrollBar.max;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">min</span>
					</td>
					<td>
						<span>integer</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the scrollbar's minimum value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-scroll-bar min='10'&gt;&lt;/smart-scroll-bar&gt;</PRE><br/>							<P>Set the <strong>min</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
 
							<PRE class="prettyprint"> scrollBar.min = 100;</PRE><br/>
 

							<P>Get the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
							<PRE class="prettyprint"> let min = scrollBar.min;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">orientation</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						horizontal
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the scrollbar's orientation Possible values:  'horizontal', 'vertical'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>orientation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-scroll-bar orientation='vertical'&gt;&lt;/smart-scroll-bar&gt;</PRE><br/>							<P>Set the <strong>orientation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
 
							<PRE class="prettyprint"> scrollBar.orientation = 'horizontal';</PRE><br/>
 

							<P>Get the <strong>orientation</strong> property. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
							<PRE class="prettyprint"> let orientation = scrollBar.orientation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">step</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						10
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the scrollbar's step. The value is increased/decreased with this step when the user presses a scrollbar button.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>step</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-scroll-bar step='15'&gt;&lt;/smart-scroll-bar&gt;</PRE><br/>							<P>Set the <strong>step</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
 
							<PRE class="prettyprint"> scrollBar.step = '20';</PRE><br/>
 

							<P>Get the <strong>step</strong> property. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
							<PRE class="prettyprint"> let step = scrollBar.step;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">value</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-scroll-bar value='10'&gt;&lt;/smart-scroll-bar&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
 
							<PRE class="prettyprint"> scrollBar.value = '100';</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar');</PRE>
							<PRE class="prettyprint"> let value = scrollBar.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartScrollBar
							</p>
							<p>
								<PRE class="prettyprint"> const scrollBar = document.querySelector('smart-scroll-bar'); </PRE>
<PRE class="prettyprint"> scrollBar.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

			</tbody>
		</table>
	</div>
</body>
</html>