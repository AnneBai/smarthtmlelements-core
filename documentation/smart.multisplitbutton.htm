<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>MultiSplitButton API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">dataSource</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the data source of the element. Items with 'button': true are rendered as buttons. Others are used as dropdown's listbox data source.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button data-source='["item 1", "item 2"]'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>dataSource</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.dataSource = [ { "label": "item 1", "value": "1", "button": true }, { "label": "item 2", "value": "2"}, { "label": "item 2", "value": "2"} ];</PRE><br/>
 

							<P>Get the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let dataSource = multiSplitButton.dataSource;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables smartMultiSplitButton.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button disabled&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let disabled = multiSplitButton.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">displayLoadingIndicator</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Displays or hides the loading indicator</p>
							<h4>Code examples</h4>

							<P>Set the <strong>displayLoadingIndicator</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button display-loading-indicator&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>displayLoadingIndicator</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.displayLoadingIndicator = false;</PRE><br/>
 

							<P>Get the <strong>displayLoadingIndicator</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let displayLoadingIndicator = multiSplitButton.displayLoadingIndicator;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">displayMember</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the displayMember. The displayMember specifies the name of an object property to display. The name is contained in the collection specified by the 'dataSource' property.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>displayMember</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button display-member='label'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>displayMember</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.displayMember = 'name';</PRE><br/>
 

							<P>Get the <strong>displayMember</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let displayMember = multiSplitButton.displayMember;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">dropDownAppendTo</span>
					</td>
					<td>
						<span>string?</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the parent container of the button's dropDown list (the popup). Used when a CSS property of unknowned parent is interfering with the visibility of the dropDown list.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dropDownAppendTo</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button drop-down-append-to='body'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>dropDownAppendTo</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.dropDownAppendTo = null;</PRE><br/>
 

							<P>Get the <strong>dropDownAppendTo</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let dropDownAppendTo = multiSplitButton.dropDownAppendTo;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">dropDownPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						overlay
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the vertical position of the dropDown list. 'Auto' means its automatically determined depending on the viewport size. Possible values:  'auto', 'top', 'bottom', 'overlay-bottom', 'overlay-center', 'overlay-top', 'center-bottom', 'center-top'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dropDownPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button drop-down-position='top'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>dropDownPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.dropDownPosition = 'bottom';</PRE><br/>
 

							<P>Get the <strong>dropDownPosition</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let dropDownPosition = multiSplitButton.dropDownPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">filterable</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines whether the Filtering is enabled.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>filterable</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button filterable&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>filterable</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.filterable = false;</PRE><br/>
 

							<P>Get the <strong>filterable</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let filterable = multiSplitButton.filterable;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">filterMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						startsWithIgnoreCase
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the filtering for the drop down list mode. Possible values:  'none', 'contains', 'containsIgnoreCase', 'equals', 'equalsIgnoreCase', 'startsWith', 'startsWithIgnoreCase', 'endsWith', 'endsWithIgnoreCase', 'matchMetaData'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>filterMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button filter-mode='contains'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>filterMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.filterMode = 'equals';</PRE><br/>
 

							<P>Get the <strong>filterMode</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let filterMode = multiSplitButton.filterMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">filterInputPlaceholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the placeholder for the drop down list filter input field.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>filterInputPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button filter-input-placeholder='Enter a value:'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>filterInputPlaceholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.filterInputPlaceholder = 'Awaiting entry:';</PRE><br/>
 

							<P>Get the <strong>filterInputPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let filterInputPlaceholder = multiSplitButton.filterInputPlaceholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">grouped</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If enabled, the items will be grouped by their first letter. Can't be applied if the dataSource already contains groups.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>grouped</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button grouped&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>grouped</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.grouped = false;</PRE><br/>
 

							<P>Get the <strong>grouped</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let grouped = multiSplitButton.grouped;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">groupMember</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the groupMember. If it's not set, by default is used 'group' property of the source object.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>groupMember</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button group-member='group'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>groupMember</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.groupMember = 'section';</PRE><br/>
 

							<P>Get the <strong>groupMember</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let groupMember = multiSplitButton.groupMember;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">hideDropDownButton</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Hides the dropDown list's button. smartMultiSplitButton works as button group.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>hideDropDownButton</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button hide-drop-down-button&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>hideDropDownButton</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.hideDropDownButton = false;</PRE><br/>
 

							<P>Get the <strong>hideDropDownButton</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let hideDropDownButton = multiSplitButton.hideDropDownButton;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">incrementalSearchDelay</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						700
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets ot gets the incrementalSearchDelay property. The incrementalSearchDelay specifies the time-interval in milliseconds after which the previous search string is deleted. The timer starts when you stop typing.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>incrementalSearchDelay</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button incremental-search-delay='100'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>incrementalSearchDelay</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.incrementalSearchDelay = 500;</PRE><br/>
 

							<P>Get the <strong>incrementalSearchDelay</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let incrementalSearchDelay = multiSplitButton.incrementalSearchDelay;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">incrementalSearchMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						startsWith
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets ot gets the mode of the incremental search mode. Possible values:  'none', 'contains', 'containsIgnoreCase', 'equals', 'equalsIgnoreCase', 'startsWith', 'startsWithIgnoreCase', 'endsWith', 'endsWithIgnoreCase', 'matchMetaData'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>incrementalSearchMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button incremental-search-mode='contains'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>incrementalSearchMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.incrementalSearchMode = 'endsWith';</PRE><br/>
 

							<P>Get the <strong>incrementalSearchMode</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let incrementalSearchMode = multiSplitButton.incrementalSearchMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">itemHeight</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the height of the items.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>itemHeight</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button item-height='20'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>itemHeight</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.itemHeight = 200;</PRE><br/>
 

							<P>Get the <strong>itemHeight</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let itemHeight = multiSplitButton.itemHeight;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">itemTemplate</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The itemTemplate property is a string that represents the id of an HTMLTemplateElement in the DOM. It's used to load list items from the HTMLTemplateElement.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button item-template='templateA'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>itemTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.itemTemplate = 'templateB';</PRE><br/>
 

							<P>Get the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let itemTemplate = multiSplitButton.itemTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">listBoxPlaceholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						No Items
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the placeholder for the list box, displayed when there are no items in it.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>listBoxPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button list-box-placeholder='No Items'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>listBoxPlaceholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.listBoxPlaceholder = 'Empty';</PRE><br/>
 

							<P>Get the <strong>listBoxPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let listBoxPlaceholder = multiSplitButton.listBoxPlaceholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">loadingIndicatorPlaceholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						Loading...
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the text that will be displayed next to the loading indicator when the loader is visible and it's position is top or bottom.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>loadingIndicatorPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button loading-indicator-placeholder='Incoming data'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>loadingIndicatorPlaceholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.loadingIndicatorPlaceholder = 'LOADING...';</PRE><br/>
 

							<P>Get the <strong>loadingIndicatorPlaceholder</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let loadingIndicatorPlaceholder = multiSplitButton.loadingIndicatorPlaceholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">loadingIndicatorPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						center
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The position of the loading indicator. Possible values:  'bottom', 'center', 'top'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>loadingIndicatorPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button loading-indicator-position='bottom'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>loadingIndicatorPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.loadingIndicatorPosition = 'top';</PRE><br/>
 

							<P>Get the <strong>loadingIndicatorPosition</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let loadingIndicatorPosition = multiSplitButton.loadingIndicatorPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "missingReference": "{{elementType}}: Missing reference to {{files}}.", "overridingProperties": "{{elementType}}: Overriding properties {{property1}} and {{property2}} applied. {{property1}} is applied.",  } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button messages='{ "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "overridingProperties": "{{elementType}}: �bergeordnete Eigenschaften {{property1}} und {{property2}} wurden angewendet. {{property1}} angewendet wird." } }'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.messages = { "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "overridingProperties": "{{elementType}}: �bergeordnete Eigenschaften {{property1}} und {{property2}} wurden angewendet. {{property1}} angewendet wird." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let messages = multiSplitButton.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">opened</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines whether the popup is opened or closed</p>
							<h4>Code examples</h4>

							<P>Set the <strong>opened</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button opened&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>opened</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.opened = false;</PRE><br/>
 

							<P>Get the <strong>opened</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let opened = multiSplitButton.opened;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Disables user interaction with the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button readonly&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.readonly = false;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let readonly = multiSplitButton.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">selectedIndexes</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets selected indexes of buttons's dropDown.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectedIndexes</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button selected-indexes='[1,2,3]'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>selectedIndexes</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.selectedIndexes = [4,5,6];</PRE><br/>
 

							<P>Get the <strong>selectedIndexes</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let selectedIndexes = multiSplitButton.selectedIndexes;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">selectedValues</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets selected values of buttons's dropDown.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectedValues</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button selected-values='["item 1"]'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>selectedValues</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.selectedValues = ["item 2"];</PRE><br/>
 

							<P>Get the <strong>selectedValues</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let selectedValues = multiSplitButton.selectedValues;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">selectionMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						one
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines how many items can be selected. Possible values:  'none', 'default', 'zeroOrMany', 'oneOrMany', 'zeroOrOne', 'one', 'checkBox', 'radioButton'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectionMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button selection-mode='zeroOrMany'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>selectionMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.selectionMode = 'oneOrMany';</PRE><br/>
 

							<P>Get the <strong>selectionMode</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let selectionMode = multiSplitButton.selectionMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">sorted</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines whether the items in the dropDown are sorted alphabetically or not</p>
							<h4>Code examples</h4>

							<P>Set the <strong>sorted</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button sorted&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>sorted</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.sorted = false;</PRE><br/>
 

							<P>Get the <strong>sorted</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let sorted = multiSplitButton.sorted;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">valueMember</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the value member of an item. Stored as value in the item object.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>valueMember</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button value-member='value'&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>valueMember</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.valueMember = 'newValue';</PRE><br/>
 

							<P>Get the <strong>valueMember</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let valueMember = multiSplitButton.valueMember;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">virtualized</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines weather or not Virtualization is used for the button's dropDownList.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>virtualized</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multi-split-button virtualized&gt;&lt;/smart-multi-split-button&gt;</PRE><br/>							<P>Set the <strong>virtualized</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
 
							<PRE class="prettyprint"> multiSplitButton.virtualized = false;</PRE><br/>
 

							<P>Get the <strong>virtualized</strong> property. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button');</PRE>
							<PRE class="prettyprint"> let virtualized = multiSplitButton.virtualized;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when button's dropDown selection is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">close</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when button's dropDown list is closed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>close</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('close', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan30">closing</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when button's dropDown list is closing.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>closing</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('closing', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan31">itemClick</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when user clicks any of the element's buttons or button's dropDown items.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>itemClick</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('itemClick', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan32">open</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when button's dropDown list is opened.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>open</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('open', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan33">opening</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when button's dropDown list is opening.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>opening</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('opening', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan34">scrollBottomReached</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when user scrolls to the end of the dropDown list.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>scrollBottomReached</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('scrollBottomReached', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan35">scrollTopReached</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when user scrolls to the start of the dropDown list.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>scrollTopReached</strong> event by type: smartMultiSplitButton
							</p>
							<p>
								<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
<PRE class="prettyprint"> multiSplitButton.addEventListener('scrollTopReached', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan36">buttons</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Returns an array with all displayed buttons.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>Array</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>buttons</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.buttons(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan37">clearItems</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Removes all items from the drop down list.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>clearItems</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.clearItems(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan38">clearSelection</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Unselects all items.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>clearSelection</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.clearSelection(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan39">close</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Closes button's dropDown list.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>close</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.close(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan40">getItem</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Returns a button or an item instance from the multiSplitButton list.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>value</em></td>
											<td><em>string</em></td>
											<td><em>The value of an item from the drop down list or a button.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>HTMLElement</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>getItem</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.getItem(First); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan41">items</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Returns an array with the items from the split button's dropDown list.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>Array</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>items</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.items(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan42">insert</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Inserts a new item at a specified position.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>position</em></td>
											<td><em>number</em></td>
											<td><em>The position where the item must be inserted.</em></td>
										</tr>
										<tr>
											<td><em>value</em></td>
											<td><em>any</em></td>
											<td><em>The value of the new item.</em></td>
										</tr>
										<tr>
											<td><em>button</em></td>
											<td><em>boolean</em></td>
											<td><em>Determines how the new element must be rendered. As a button or list item.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>insert</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.insert(5, "New item", true); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan43">open</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Opens the splitButton's dropDown list.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>open</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.open(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan44">remove</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Removes an item at a specified position.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>position</em></td>
											<td><em>number</em></td>
											<td><em>The position of the removed item.</em></td>
										</tr>
										<tr>
											<td><em>button</em></td>
											<td><em>boolean</em></td>
											<td><em>If is set to true the position is in the button's part. Otherwise is about dropDownList's part.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>remove</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.remove(5); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan45">select</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Selects an item from the splitButton's dropDown list. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>item</em></td>
											<td><em>String/HTMLElement</em></td>
											<td><em>A string, representing the value of the item or an HTML Element referencing an item from the list</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>select</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.select(First Item); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan46">unselect</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Unselects an item from the splitButton's dropDown list. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>item</em></td>
											<td><em>String/HTMLElement</em></td>
											<td><em>A string, representing the value of the item or an HTML Element referencing an item from the list</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>unselect</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.unselect(First Item); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan47">update</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Updates an item from the dropDown list.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>position</em></td>
											<td><em>number</em></td>
											<td><em>The position where the item must be updated.</em></td>
										</tr>
										<tr>
											<td><em>value</em></td>
											<td><em>any</em></td>
											<td><em>The value of the updated item.</em></td>
										</tr>
										<tr>
											<td><em>button</em></td>
											<td><em>boolean</em></td>
											<td><em>If is set to true the position is in the button's part. Otherwise is about dropDownList's part.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>update</strong> method. </P>
							<PRE class="prettyprint"> let multiSplitButton = document.querySelector('smart-multi-split-button'); </PRE>
 							<PRE class="prettyprint"> multiSplitButton.update(5, "Updated item", true); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>