<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>FileUpload API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">accept</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the file types that can be submitted to the server through smartFileUpload. This property corresponds to the accept attribute of the hidden file input which is submitted to the URL specified by the uploadUrl property.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>accept</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload accept='.img'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>accept</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.accept = '.pdf';</PRE><br/>
 

							<P>Get the <strong>accept</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let accept = fileUpload.accept;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">appendTo</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Appends the list with selected files in custom input</p>
							<h4>Code examples</h4>

							<P>Set the <strong>appendTo</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload append-to='div1'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>appendTo</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.appendTo = div2;</PRE><br/>
 

							<P>Get the <strong>appendTo</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let appendTo = fileUpload.appendTo;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">autoUpload</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether files will be automatically uploaded when selected.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>autoUpload</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload auto-upload&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>autoUpload</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.autoUpload = false;</PRE><br/>
 

							<P>Get the <strong>autoUpload</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let autoUpload = fileUpload.autoUpload;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">directory</span>
					</td>
					<td>
						<span>string?</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Allows upload of directories. Files in all subfolders are also uploaded (supported in Firefox and Chrome).</p>
							<h4>Code examples</h4>

							<P>Set the <strong>directory</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload directory='true'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>directory</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.directory = false;</PRE><br/>
 

							<P>Get the <strong>directory</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let directory = fileUpload.directory;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload disabled&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let disabled = fileUpload.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">dropZone</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Defines a surface, where files can be dropped and then added in the fileUpload list. When is set to true, the zone is inside the element. When is set to certain id, the drop zone is append to the element with this particular id. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>dropZone</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload drop-zone='div1'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>dropZone</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.dropZone = div2;</PRE><br/>
 

							<P>Get the <strong>dropZone</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let dropZone = fileUpload.dropZone;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">hideFooter</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Hides the footer element and it's content (Upload all and Close all buttons)</p>
							<h4>Code examples</h4>

							<P>Set the <strong>hideFooter</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload hide-footer&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>hideFooter</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.hideFooter = false;</PRE><br/>
 

							<P>Get the <strong>hideFooter</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let hideFooter = fileUpload.hideFooter;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">itemTemplate</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Applies custom template to the rows aof the files list.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload item-template='div1'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>itemTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.itemTemplate = 'div2';</PRE><br/>
 

							<P>Get the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let itemTemplate = fileUpload.itemTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">localization</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the various text values used in the widget. Useful for localization. The localization object has the following fields: browseButton, uploadButton, cancelButton, uploadFileTooltip, cancelFileTooltip, abortFileTooltip</p>
							<h4>Code examples</h4>

							<P>Set the <strong>localization</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload localization='{}'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>localization</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.localization = {};</PRE><br/>
 

							<P>Get the <strong>localization</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let localization = fileUpload.localization;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">multiple</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether multiple files selection and upload are allowed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>multiple</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload multiple&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>multiple</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.multiple = false;</PRE><br/>
 

							<P>Get the <strong>multiple</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let multiple = fileUpload.multiple;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">name</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the name attribute of the hidden file input which is submitted to the URL specified by the uploadUrl property.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload name='fileUploadName'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>name</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.name = 'fileUploadNewName';</PRE><br/>
 

							<P>Get the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let name = fileUpload.name;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">showProgress</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Displays progress bar at the bottom of the uploaded item.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>showProgress</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload show-progress&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>showProgress</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.showProgress = false;</PRE><br/>
 

							<P>Get the <strong>showProgress</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let showProgress = fileUpload.showProgress;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">uploadUrl</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the upload URL. This property corresponds to the upload form's action attribute. For example, the uploadUrl property can point to a PHP file, which to handle the upload operation server-side.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>uploadUrl</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-file-upload upload-url='localhost'&gt;&lt;/smart-file-upload&gt;</PRE><br/>							<P>Set the <strong>uploadUrl</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
 
							<PRE class="prettyprint"> fileUpload.uploadUrl = 'localhost/fileUpload';</PRE><br/>
 

							<P>Get the <strong>uploadUrl</strong> property. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload');</PRE>
							<PRE class="prettyprint"> let uploadUrl = fileUpload.uploadUrl;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">remove</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a file row has been removed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>remove</strong> event by type: smartFileUpload
							</p>
							<p>
								<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
<PRE class="prettyprint"> fileUpload.addEventListener('remove', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">select</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a file has been selected.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>select</strong> event by type: smartFileUpload
							</p>
							<p>
								<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
<PRE class="prettyprint"> fileUpload.addEventListener('select', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">uploadStart</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a file upload operation has started.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>uploadStart</strong> event by type: smartFileUpload
							</p>
							<p>
								<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
<PRE class="prettyprint"> fileUpload.addEventListener('uploadStart', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">uploadEnd</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a file upload operation has ended.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>uploadEnd</strong> event by type: smartFileUpload
							</p>
							<p>
								<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
<PRE class="prettyprint"> fileUpload.addEventListener('uploadEnd', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">browse</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Browses for a file.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>browse</strong> method. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
 							<PRE class="prettyprint"> fileUpload.browse(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">cancelFile</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Cancels a selected file.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>item</em></td>
											<td><em>Number</em></td>
											<td><em>Item's identificator.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>cancelFile</strong> method. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
 							<PRE class="prettyprint"> fileUpload.cancelFile(1); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">cancelAll</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Cancels all selected files.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>cancelAll</strong> method. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
 							<PRE class="prettyprint"> fileUpload.cancelAll(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">uploadFile</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Uploads a selected file.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>item</em></td>
											<td><em>Number</em></td>
											<td><em>Item's identificator.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>uploadFile</strong> method. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
 							<PRE class="prettyprint"> fileUpload.uploadFile(1); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">uploadAll</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Uploads all selected files.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>uploadAll</strong> method. </P>
							<PRE class="prettyprint"> const fileUpload = document.querySelector('smart-file-upload'); </PRE>
 							<PRE class="prettyprint"> fileUpload.uploadAll(); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>