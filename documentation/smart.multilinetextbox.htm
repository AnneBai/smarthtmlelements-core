<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>MultilineTextBox API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">allowHorizontalScrollbar</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If is true, displaying of the horizontal scollbar is allowed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>allowHorizontalScrollbar</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box allow-horizontal-scrollbar&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>allowHorizontalScrollbar</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.allowHorizontalScrollbar = false;</PRE><br/>
 

							<P>Get the <strong>allowHorizontalScrollbar</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let allowHorizontalScrollbar = multilineTextBox.allowHorizontalScrollbar;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">allowVerticalScrollbar</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If is true, displaying of the vertical scollbar is allowed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>allowVerticalScrollbar</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box allow-vertical-scrollbar&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>allowVerticalScrollbar</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.allowVerticalScrollbar = false;</PRE><br/>
 

							<P>Get the <strong>allowVerticalScrollbar</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let allowVerticalScrollbar = multilineTextBox.allowVerticalScrollbar;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">autoCapitalize</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						none
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Controls whether and how the text value should be automatically capitalized as it is entered/edited by the user. Possible values:  'none', 'words', 'characters'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>autoCapitalize</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box auto-capitalize='words'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>autoCapitalize</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.autoCapitalize = 'characters';</PRE><br/>
 

							<P>Get the <strong>autoCapitalize</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let autoCapitalize = multilineTextBox.autoCapitalize;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">autoComplete</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						off
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values:  'on', 'off'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>autoComplete</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box auto-complete='on'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>autoComplete</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.autoComplete = 'off';</PRE><br/>
 

							<P>Get the <strong>autoComplete</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let autoComplete = multilineTextBox.autoComplete;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">autoFocus</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifyes that a text box should have focus when the page loads.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>autoFocus</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box auto-focus&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>autoFocus</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.autoFocus = false;</PRE><br/>
 

							<P>Get the <strong>autoFocus</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let autoFocus = multilineTextBox.autoFocus;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">cols</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						20
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The visible width of the text control, in average character widths. If it is specified, it must be a positive integer. If it is not specified, the default value is 20.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>cols</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box cols='40'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>cols</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.cols = 60;</PRE><br/>
 

							<P>Get the <strong>cols</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let cols = multilineTextBox.cols;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box disabled&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let disabled = multilineTextBox.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">displayMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						default
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifies how characters are displayed in text box. Possible values:  'escaped', 'default'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>displayMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box display-mode='escaped'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>displayMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.displayMode = 'default';</PRE><br/>
 

							<P>Get the <strong>displayMode</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let displayMode = multilineTextBox.displayMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">form</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The form element that the element is associated with (its "form owner"). The value of the attribute must be the ID of a form element in the same document.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>form</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box form='form1'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>form</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.form = 'form2';</PRE><br/>
 

							<P>Get the <strong>form</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let form = multilineTextBox.form;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">hint</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets additional helper text below the element. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>hint</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box hint='Helper text'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>hint</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.hint = Hint;</PRE><br/>
 

							<P>Get the <strong>hint</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let hint = multilineTextBox.hint;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">label</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets label above the element. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>label</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box label='Label text'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>label</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.label = 'Label';</PRE><br/>
 

							<P>Get the <strong>label</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let label = multilineTextBox.label;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">maxLength</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets/gets the maximum number of characters that the user can enter.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>maxLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box max-length='120'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>maxLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.maxLength = 150;</PRE><br/>
 

							<P>Get the <strong>maxLength</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let maxLength = multilineTextBox.maxLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">minLength</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets/gets the minimum number of characters that the user can enter.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>minLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box min-length='20'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>minLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.minLength = 50;</PRE><br/>
 

							<P>Get the <strong>minLength</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let minLength = multilineTextBox.minLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "missingReference": "{{elementType}}: Missing reference to {{files}}." } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box messages='{ "de": { "missingReference": "smartTank: Fehlende Bezugnahme auf {{files}}." } }'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.messages = { "de": { "missingReference": "smartTank: Fehlende Bezugnahme auf {{files}}." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let messages = multilineTextBox.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">name</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The name of the control.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box name='TextArea'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>name</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.name = 'textarea';</PRE><br/>
 

							<P>Get the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let name = multilineTextBox.name;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">placeholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>A hint to the user of what can be entered in the control. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box placeholder='Placeholder'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>placeholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.placeholder = 'PlaceHolder';</PRE><br/>
 

							<P>Get the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let placeholder = multilineTextBox.placeholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If the widgets is readonly, the users cannot iteract with the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box readonly&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.readonly = true;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let readonly = multilineTextBox.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">required</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifies that the user must fill in a value before submitting a form</p>
							<h4>Code examples</h4>

							<P>Set the <strong>required</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box required&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>required</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.required = false;</PRE><br/>
 

							<P>Get the <strong>required</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let required = multilineTextBox.required;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">resizable</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/ disables the resizing of the text box</p>
							<h4>Code examples</h4>

							<P>Set the <strong>resizable</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box resizable&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>resizable</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.resizable = false;</PRE><br/>
 

							<P>Get the <strong>resizable</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let resizable = multilineTextBox.resizable;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">rows</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						20
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The number of visible text lines for the control.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>rows</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box rows='40'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>rows</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.rows = 60;</PRE><br/>
 

							<P>Get the <strong>rows</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let rows = multilineTextBox.rows;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">selectAllOnFocus</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Specifies whether the content of the text box will be selected on focus.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectAllOnFocus</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box select-all-on-focus&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>selectAllOnFocus</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.selectAllOnFocus = false;</PRE><br/>
 

							<P>Get the <strong>selectAllOnFocus</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let selectAllOnFocus = multilineTextBox.selectAllOnFocus;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">selectionDirection</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						none
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The direction in which selection occurred.  Possible values:  'forward', 'backward', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectionDirection</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box selection-direction='forward'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>selectionDirection</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.selectionDirection = 'backward';</PRE><br/>
 

							<P>Get the <strong>selectionDirection</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let selectionDirection = multilineTextBox.selectionDirection;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">selectionEnd</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The index to the last character in the current selection. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectionEnd</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box selection-end='40'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>selectionEnd</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.selectionEnd = 60;</PRE><br/>
 

							<P>Get the <strong>selectionEnd</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let selectionEnd = multilineTextBox.selectionEnd;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">selectionStart</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>The index to the first character in the current selection.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectionStart</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box selection-start='40'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>selectionStart</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.selectionStart = 60;</PRE><br/>
 

							<P>Get the <strong>selectionStart</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let selectionStart = multilineTextBox.selectionStart;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">spellcheck</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Setting the value of this attribute to true indicates that the element needs to have its spelling and grammar checked.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>spellcheck</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box spellcheck&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>spellcheck</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.spellcheck = false;</PRE><br/>
 

							<P>Get the <strong>spellcheck</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let spellcheck = multilineTextBox.spellcheck;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">value</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value of the text box. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box value='Demo value.'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.value = 'New demo value.';</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let value = multilineTextBox.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">wrap</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						soft
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Indicates how the control wraps text. Possible values:  'hard', 'soft', 'off'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>wrap</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-multiline-text-box wrap='hard'&gt;&lt;/smart-multiline-text-box&gt;</PRE><br/>							<P>Set the <strong>wrap</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
 
							<PRE class="prettyprint"> multilineTextBox.wrap = 'soft';</PRE><br/>
 

							<P>Get the <strong>wrap</strong> property. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box');</PRE>
							<PRE class="prettyprint"> let wrap = multilineTextBox.wrap;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value of the text box is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartMultilineTextBox
							</p>
							<p>
								<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box'); </PRE>
<PRE class="prettyprint"> multilineTextBox.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">focus</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Focuses the text box.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>focus</strong> method. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box'); </PRE>
 							<PRE class="prettyprint"> multilineTextBox.focus(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">reset</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								The method is used to reset text box to it's initial value.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>reset</strong> method. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box'); </PRE>
 							<PRE class="prettyprint"> multilineTextBox.reset(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan30">selection</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Gets user selection. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>displayMode</em></td>
											<td><em>string</em></td>
											<td><em>If is set 'escaped', the value returned from the method is with escaped special characters.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>String</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>selection</strong> method. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box'); </PRE>
 							<PRE class="prettyprint"> multilineTextBox.selection(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan31">select</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Sets user selection.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>range</em></td>
											<td><em>object</em></td>
											<td><em>Sets the start and the end of the selection. If is undefined, whole content is selected</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>select</strong> method. </P>
							<PRE class="prettyprint"> let multilineTextBox = document.querySelector('smart-multiline-text-box'); </PRE>
 							<PRE class="prettyprint"> multilineTextBox.select([ 0, 3 ]); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>