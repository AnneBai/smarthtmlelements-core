<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>NumericTextBox API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">decimalSeparator</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						.
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the char to use as the decimal separator in numeric values. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box decimal-separator=','&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>decimalSeparator</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.decimalSeparator = '.';</PRE><br/>
 

							<P>Get the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let decimalSeparator = numericTextBox.decimalSeparator;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the smartNumericTextBox. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box disabled&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let disabled = numericTextBox.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">dropDownEnabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines if a dropdown will be displayed when the radix display button is clicked. The dropdown shows the entered value represented in the binary, octal, decimal and hexadecimal numeral systems. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>dropDownEnabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box drop-down-enabled&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>dropDownEnabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.dropDownEnabled = false;</PRE><br/>
 

							<P>Get the <strong>dropDownEnabled</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let dropDownEnabled = numericTextBox.dropDownEnabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">enableMouseWheelAction</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables incrementing/decrementing the value using the mouse wheel in smartNumericTextBox. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>enableMouseWheelAction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box enable-mouse-wheel-action&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>enableMouseWheelAction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.enableMouseWheelAction = true;</PRE><br/>
 

							<P>Get the <strong>enableMouseWheelAction</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let enableMouseWheelAction = numericTextBox.enableMouseWheelAction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">hint</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets additional helper text below the element. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>hint</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box hint='Helper text'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>hint</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.hint = 'Hint';</PRE><br/>
 

							<P>Get the <strong>hint</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let hint = numericTextBox.hint;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">inputFormat</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						integer
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the input format of the widget. Setting this property dynamically can lead to precision loss.  Possible values:  'integer', 'floatingPoint', 'complex'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>inputFormat</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box input-format='floatingPoint'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>inputFormat</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.inputFormat = 'complex';</PRE><br/>
 

							<P>Get the <strong>inputFormat</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let inputFormat = numericTextBox.inputFormat;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">label</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets label above the element. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>label</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box label='Helper text'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>label</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.label = 'Hint';</PRE><br/>
 

							<P>Get the <strong>label</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let label = numericTextBox.label;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">language</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						en
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the language. Used in conjunction with the property <strong>messages</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>language</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box language='de'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>language</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.language = 'en';</PRE><br/>
 

							<P>Get the <strong>language</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let language = numericTextBox.language;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">max</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the maximum value of the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box max='10'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>max</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.max = 20;</PRE><br/>
 

							<P>Get the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let max = numericTextBox.max;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "binary": "BIN", "octal": "OCT", "decimal": "DEC", "hexadecimal": "HEX", "missingReference": "smartNumericTextBox: Missing reference to {{file}}.", "integerOnly": "smartNumericTextBox: The property {{property}} can only be set when inputFormat is integer.", "noInteger": "smartNumericTextBox: the property {{property}} cannot be set when inputFormat is integer.", "significantPrecisionDigits": "smartNumericTextBox: the properties significantDigits and precisionDigits cannot be set at the same time." } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box messages='{ "de": { "binary": "Dual", "octal": "Oktal", "decimal": "Dezimal", "hexadecimal": "Hexadezimal", "missingReference": "smartNumericTextBox: Fehlende Bezugnahme auf {{file}}.", "integerOnly": "smartNumericTextBox: Die Eigenschaft {{property}} kann nur eingestellt werden, wenn inputFormat integer ist.", "noInteger": "smartNumericTextBox: Die Eigenschaft {{property}} kann nicht eingestellt werden, wenn inputFormat integer ist.", "significantPrecisionDigits": "smartNumericTextBox: Die Eigenschaften significantDigits und precisionDigits können nicht zusammen eingestellt werden." } }'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.messages = { "de": { "binary": "2", "octal": "8", "decimal": "10", "hexadecimal": "16", "missingReference": "smartNumericTextBox: Fehlende Bezugnahme auf {{file}}.", "integerOnly": "smartNumericTextBox: Die Eigenschaft {{property}} kann nur eingestellt werden, wenn inputFormat integer ist.", "noInteger": "smartNumericTextBox: Die Eigenschaft {{property}} kann nicht eingestellt werden, wenn inputFormat integer ist.", "significantPrecisionDigits": "smartNumericTextBox: Die Eigenschaften significantDigits und precisionDigits können nicht zusammen eingestellt werden." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let messages = numericTextBox.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">min</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the minimum value of the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box min='5'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>min</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.min = 0;</PRE><br/>
 

							<P>Get the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let min = numericTextBox.min;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">nullable</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the setting of the <strong>value</strong> property to <em>null</em> or empty string. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>nullable</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box nullable&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>nullable</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.nullable = false;</PRE><br/>
 

							<P>Get the <strong>nullable</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let nullable = numericTextBox.nullable;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">opened</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether the radix dropdown is opened. Applicable only when <strong>dropDownEnabled</strong> is <em>true</em>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>opened</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box opened&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>opened</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.opened = true;</PRE><br/>
 

							<P>Get the <strong>opened</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let opened = numericTextBox.opened;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">placeholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the widget's place holder displayed when the widget's input is empty. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box placeholder='Placeholder'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>placeholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.placeholder = 'New Placeholder';</PRE><br/>
 

							<P>Get the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let placeholder = numericTextBox.placeholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">precisionDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the number of digits after the decimal point. Applicable when <strong>inputFormat</strong> is either <em>'floatingPoint'</em> or <em>'complex'</em>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box precision-digits='5'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>precisionDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.precisionDigits = 6;</PRE><br/>
 

							<P>Get the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let precisionDigits = numericTextBox.precisionDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">radix</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						10
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the radix of the smartNumericTextBox. The radix specifies the numeral system in which to display the widget's value. Applicable only when <strong>inputFormat</strong> is <em>'integer'</em>.  Possible values:  2, 8, 10, 16, 'binary', 'octal', 'decimal', 'hexadecimal'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>radix</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box radix='8'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>radix</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.radix = binary;</PRE><br/>
 

							<P>Get the <strong>radix</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let radix = numericTextBox.radix;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">radixDisplay</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the radix display button of the smartNumericTextBox. Applicable only when <strong>inputFormat</strong> is <em>'integer'</em>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>radixDisplay</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box radix-display&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>radixDisplay</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.radixDisplay = false;</PRE><br/>
 

							<P>Get the <strong>radixDisplay</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let radixDisplay = numericTextBox.radixDisplay;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">radixDisplayPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						left
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the radix display button of the smartNumericTextBox.  Possible values:  'left', 'right'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>radixDisplayPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box radix-display-position='right'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>radixDisplayPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.radixDisplayPosition = 'left';</PRE><br/>
 

							<P>Get the <strong>radixDisplayPosition</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let radixDisplayPosition = numericTextBox.radixDisplayPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the readonly state of the smartNumericTextBox. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box readonly&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.readonly = false;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let readonly = numericTextBox.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">scientificNotation</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables outputting the value in scientific notation. Applicable only when <strong>inputFormat</strong> is <em>'integer'</em>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box scientific-notation&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>scientificNotation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.scientificNotation = false;</PRE><br/>
 

							<P>Get the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let scientificNotation = numericTextBox.scientificNotation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">showUnit</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the visibility of the units. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box show-unit&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>showUnit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.showUnit = false;</PRE><br/>
 

							<P>Get the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let showUnit = numericTextBox.showUnit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">significantDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determining how many significant digits are in a number. Applicable when <strong>inputFormat</strong> is either <em>'floatingPoint'</em> or <em>'complex'</em>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box significant-digits='5'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>significantDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.significantDigits = 6;</PRE><br/>
 

							<P>Get the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let significantDigits = numericTextBox.significantDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">spinButtons</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the visibility of the spin buttons. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>spinButtons</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box spin-buttons&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>spinButtons</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.spinButtons = true;</PRE><br/>
 

							<P>Get the <strong>spinButtons</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let spinButtons = numericTextBox.spinButtons;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">spinButtonsDelay</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						75
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the delay between repeats of spin buttons in miliseconds. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>spinButtonsDelay</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box spin-buttons-delay='50'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>spinButtonsDelay</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.spinButtonsDelay = 100;</PRE><br/>
 

							<P>Get the <strong>spinButtonsDelay</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let spinButtonsDelay = numericTextBox.spinButtonsDelay;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">spinButtonsInitialDelay</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets a delay before the first repeat iteration of spin buttons in miliseconds. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>spinButtonsInitialDelay</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box spin-buttons-initial-delay='25'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>spinButtonsInitialDelay</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.spinButtonsInitialDelay = 50;</PRE><br/>
 

							<P>Get the <strong>spinButtonsInitialDelay</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let spinButtonsInitialDelay = numericTextBox.spinButtonsInitialDelay;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">spinButtonsPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						right
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the spin buttons of the smartNumericTextBox.  Possible values:  'left', 'right'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>spinButtonsPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box spin-buttons-position='left'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>spinButtonsPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.spinButtonsPosition = 'right';</PRE><br/>
 

							<P>Get the <strong>spinButtonsPosition</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let spinButtonsPosition = numericTextBox.spinButtonsPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">spinButtonsStep</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						1
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the increase/decrease step. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>spinButtonsStep</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box spin-buttons-step='2'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>spinButtonsStep</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.spinButtonsStep = 3;</PRE><br/>
 

							<P>Get the <strong>spinButtonsStep</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let spinButtonsStep = numericTextBox.spinButtonsStep;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">unit</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						kg
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the name of unit used in smartNumericTextBox widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box unit='cm'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>unit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.unit = 'mm';</PRE><br/>
 

							<P>Get the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let unit = numericTextBox.unit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">value</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value of the smartNumericTextBox widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box value='5'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.value = 10;</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let value = numericTextBox.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">wordLength</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						int32
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the word length. Applicable only when <strong>inputFormat</strong> is <em>'integer'</em>. If <strong>min</strong> and/or <strong>max</strong> are not set by default, they will be set automatically based on the specified word length.  Possible values:  'int8', 'uint8', 'int16', 'uint16', 'int32', 'uint32', 'int64', 'uint64'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-numeric-text-box word-length='int8'&gt;&lt;/smart-numeric-text-box&gt;</PRE><br/>							<P>Set the <strong>wordLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
 
							<PRE class="prettyprint"> numericTextBox.wordLength = 'int64';</PRE><br/>
 

							<P>Get the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box');</PRE>
							<PRE class="prettyprint"> let wordLength = numericTextBox.wordLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan30">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value is changed. 
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartNumericTextBox
							</p>
							<p>
								<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box'); </PRE>
<PRE class="prettyprint"> numericTextBox.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan31">close</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the dropdown is closed. 
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>close</strong> event by type: smartNumericTextBox
							</p>
							<p>
								<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box'); </PRE>
<PRE class="prettyprint"> numericTextBox.addEventListener('close', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan32">open</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the dropdown is opened. 
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>open</strong> event by type: smartNumericTextBox
							</p>
							<p>
								<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box'); </PRE>
<PRE class="prettyprint"> numericTextBox.addEventListener('open', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan33">radixChange</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the radix is changed. 
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>radixChange</strong> event by type: smartNumericTextBox
							</p>
							<p>
								<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box'); </PRE>
<PRE class="prettyprint"> numericTextBox.addEventListener('radixChange', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan34">focus</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Focuses the NumericTextBox. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>focus</strong> method. </P>
							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box'); </PRE>
 							<PRE class="prettyprint"> numericTextBox.focus(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan35">val</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Get/set the value of the NumericTextBox. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>value</em></td>
											<td><em>string/number</em></td>
											<td><em>The value to be set. If no parameter is passed, returns the displayed value of the smartNumericTextBox. </em></td>
										</tr>
										<tr>
											<td><em>suppressValidation</em></td>
											<td><em>boolean</em></td>
											<td><em>If <em>true</em> is passed, the passed value will be set to the smartNumericTextBox without validation. </em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>String</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>val</strong> method. </P>
							// Get the value. 							<PRE class="prettyprint"> let numericTextBox = document.querySelector('smart-numeric-text-box'); </PRE>
 							<PRE class="prettyprint"> let val = numericTextBox.val(); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>