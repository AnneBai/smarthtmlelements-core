<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>Tabs API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">addNewTab</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether the "Add new tab" button (+) is displayed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>addNewTab</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs add-new-tab&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>addNewTab</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.addNewTab = false;</PRE><br/>
 

							<P>Get the <strong>addNewTab</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let addNewTab = tabs.addNewTab;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">closeButtonMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						default
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the close button mode. Possible values:  'default', 'selected'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>closeButtonMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs close-button-mode='selected'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>closeButtonMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.closeButtonMode = 'default';</PRE><br/>
 

							<P>Get the <strong>closeButtonMode</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let closeButtonMode = tabs.closeButtonMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">closeButtons</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether close buttons are displayed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>closeButtons</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs close-buttons&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>closeButtons</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.closeButtons = false;</PRE><br/>
 

							<P>Get the <strong>closeButtons</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let closeButtons = tabs.closeButtons;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">collapsed</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether the Tabs content section is collapsed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>collapsed</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs collapsed&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>collapsed</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.collapsed = false;</PRE><br/>
 

							<P>Get the <strong>collapsed</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let collapsed = tabs.collapsed;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">collapsible</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the collapsible feature.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>collapsible</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs collapsible&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>collapsible</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.collapsible = false;</PRE><br/>
 

							<P>Get the <strong>collapsible</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let collapsible = tabs.collapsible;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">dataSource</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the data source that will be loaded to the Tabs.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs data-source='[{ "label": "Item 1", "content": "content 1" }, { "label": "Item 2", "content": "content 2" }, { "label": "Item 3", "content": "content 3", "selected": true }]'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>dataSource</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.dataSource = [{ label: 'Item A', content: 'Content A', index: 3 }, { label: 'Item B', labelSize: 100, content: 'Content B', selected: true, index: 2 }, { label: 'Item C', content: 'Content C', index: 1 }, { label: 'Item D', content: 'Content D', index: 0 }];</PRE><br/>
 

							<P>Get the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let dataSource = tabs.dataSource;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs disabled&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let disabled = tabs.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">enableMouseWheelAction</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables scrolling using the mouse wheel through overflowing tab labels in the tab strip. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>enableMouseWheelAction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs enable-mouse-wheel-action&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>enableMouseWheelAction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.enableMouseWheelAction = true;</PRE><br/>
 

							<P>Get the <strong>enableMouseWheelAction</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let enableMouseWheelAction = tabs.enableMouseWheelAction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">locale</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						en
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the locale. Used in conjunction with the property <strong>messages</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>locale</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs locale='de'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>locale</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.locale = 'fr';</PRE><br/>
 

							<P>Get the <strong>locale</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let locale = tabs.locale;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ 'en': { 'ambiguousIndexes': 'smart-tabs: Initially set smart-tab-item indexes are ambiguous and are ignored in favour of the HTML structure.', 'detailsObjectRequired': 'smart-tabs: The method "insert" requires a details Object to be passed as a second argument.', 'invalidIndex': 'smart-tabs: "{{method}}" method accepts an index of type number.', 'referenceNodeNotChild': 'smart-tabs: Passed {{argument}} is not part of this smart-tabs element.', 'tabItemRequired': 'smart-tabs: The method "{{method}}" requires a "smart-tab-item" element to be passed as an argument.' } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>locale</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs messages='{ "de": { "ambiguousIndexes": "smart-tabs: Anf�nglich werden smart-tab-item-Indizes mehrdeutig und werden zugunsten der HTML-Struktur ignoriert.", "detailsObjectRequired": "smart-tabs: Die Methode insert erfordert ein details Objekt, das als zweites Argument �bergeben werden soll.", "invalidIndex": "smart-tabs: {{method}} -Methode akzeptiert einen Index der Typnummer.", "referenceNodeNotChild": "smart-tabs: Passierte {{argument}} ist nicht Teil dieses smart-tabs-Elements.", "tabItemRequired": "smart-tabs: Die Methode {{method}} erfordert, dass ein smart-tab-item -Element als Argument �bergeben wird." } }'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.messages = { 'en': { 'ambiguousIndexes': 'smart-tabs: Initially set smart-tab-item indexes are ambiguous and are ignored in favour of the HTML structure.', 'detailsObjectRequired': 'smart-tabs: The method "insert" requires a details Object to be passed as a second argument.', 'invalidIndex': 'smart-tabs: "{{method}}" method accepts an index of type number.', 'referenceNodeNotChild': 'smart-tabs: Passed {{argument}} is not part of this smart-tabs element.', 'tabItemRequired': 'smart-tabs: The method "{{method}}" requires a "smart-tab-item" element to be passed as an argument.' } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let messages = tabs.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">overflow</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						auto
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the Tabs scroll buttons behavior. Applicable only when <strong>tabLayout</strong> is <em>'scroll'</em>. Possible values:  'auto', 'hidden', 'scroll'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>overflow</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs overflow='hidden'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>overflow</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.overflow = 'scroll';</PRE><br/>
 

							<P>Get the <strong>overflow</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let overflow = tabs.overflow;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Disables user interaction with the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs readonly&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.readonly = true;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let readonly = tabs.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">reorder</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the reorder feature. When this feature is enabled, the end-user can drag a tab and drop it over another tab. As a result the tabs will be reordered.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>reorder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs reorder&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>reorder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.reorder = true;</PRE><br/>
 

							<P>Get the <strong>reorder</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let reorder = tabs.reorder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">resize</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether tab labels can be resized by dragging with the mouse.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>resize</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs resize&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>resize</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.resize = true;</PRE><br/>
 

							<P>Get the <strong>resize</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let resize = tabs.resize;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">scrollButtonsPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						both
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the scroll buttons. Possible values:  'near', 'far', 'both'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scrollButtonsPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs scroll-buttons-position='near'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>scrollButtonsPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.scrollButtonsPosition = 'far';</PRE><br/>
 

							<P>Get the <strong>scrollButtonsPosition</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let scrollButtonsPosition = tabs.scrollButtonsPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">selectedIndex</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets which tab is selected.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectedIndex</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs selected-index='2'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>selectedIndex</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.selectedIndex = 0;</PRE><br/>
 

							<P>Get the <strong>selectedIndex</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let selectedIndex = tabs.selectedIndex;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">selectionMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						click
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the way the user can switch between tabs. Possible values:  'click', 'dblclick', 'mouseenter', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>selectionMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs selection-mode='dblclick'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>selectionMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.selectionMode = 'mouseenter';</PRE><br/>
 

							<P>Get the <strong>selectionMode</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let selectionMode = tabs.selectionMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">tabLayout</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						scroll
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Applies one of four behaviors when the element is not wide enough to display all tab labels. Possible values:  'scroll', 'dropdown', 'wrap', 'shrink'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>tabLayout</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs tab-layout='dropdown'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>tabLayout</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.tabLayout = 'wrap';</PRE><br/>
 

							<P>Get the <strong>tabLayout</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let tabLayout = tabs.tabLayout;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">tabPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						top
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets where the tab strip is positioned. Possible values:  'top', 'bottom', 'left', 'right', 'hidden'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>tabPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs tab-position='bottom'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>tabPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.tabPosition = 'left';</PRE><br/>
 

							<P>Get the <strong>tabPosition</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let tabPosition = tabs.tabPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">tabTextOrientation</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						horizontal
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the orientation of the text in the tabs. Possible values:  'horizontal', 'vertical'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>tabTextOrientation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tabs tab-text-orientation='vertical'&gt;&lt;/smart-tabs&gt;</PRE><br/>							<P>Set the <strong>tabTextOrientation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
 
							<PRE class="prettyprint"> tabs.tabTextOrientation = 'horizontal';</PRE><br/>
 

							<P>Get the <strong>tabTextOrientation</strong> property. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs');</PRE>
							<PRE class="prettyprint"> let tabTextOrientation = tabs.tabTextOrientation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the tab selection is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartTabs
							</p>
							<p>
								<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
<PRE class="prettyprint"> tabs.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">close</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a tab is closed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>close</strong> event by type: smartTabs
							</p>
							<p>
								<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
<PRE class="prettyprint"> tabs.addEventListener('close', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">closing</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a tab is about to be closed. The closing operation can be canceled by calling event.preventDefault() in the event handler function.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>closing</strong> event by type: smartTabs
							</p>
							<p>
								<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
<PRE class="prettyprint"> tabs.addEventListener('closing', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">reorder</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when tabs have been reordered.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>reorder</strong> event by type: smartTabs
							</p>
							<p>
								<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
<PRE class="prettyprint"> tabs.addEventListener('reorder', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">reorderEnd</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a reorder operation has ended.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>reorderEnd</strong> event by type: smartTabs
							</p>
							<p>
								<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
<PRE class="prettyprint"> tabs.addEventListener('reorderEnd', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">reorderStart</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a reorder operation has started.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>reorderStart</strong> event by type: smartTabs
							</p>
							<p>
								<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
<PRE class="prettyprint"> tabs.addEventListener('reorderStart', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">appendChild</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Appends a "smart-tab-item" node as the last tab of the Tabs.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>node</em></td>
											<td><em>HTMLElement</em></td>
											<td><em>The "smart-tab-item" node to append</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>appendChild</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.appendChild(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">collapse</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Collapses the content section.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>collapse</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.collapse(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">ensureVisible</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Makes sure a tab is visible by scrolling to it.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>index</em></td>
											<td><em>Number</em></td>
											<td><em>The index of the tab to scroll to.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>ensureVisible</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.ensureVisible(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">expand</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Expands the content section.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>expand</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.expand(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan30">getOffsetFromEdgeOfElement</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Returns the offset of the tab item container (smart-tab-item element) from the edge of the Tabs (smart-tabs element) where the tab strip is positioned.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>index</em></td>
											<td><em>Number</em></td>
											<td><em>The index of the tab item.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>Number</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>getOffsetFromEdgeOfElement</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.getOffsetFromEdgeOfElement(1); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan31">insert</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Inserts a new tab and an associated content section.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>index</em></td>
											<td><em>Number</em></td>
											<td><em>The index to insert a new tab at.</em></td>
										</tr>
										<tr>
											<td><em>details</em></td>
											<td><em>Object</em></td>
											<td><em>An Object with the fields "label", "labelSize", "content" and "group".</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>insert</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.insert(1); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan32">insertBefore</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Inserts the specified "smart-tab-item" node before the reference "smart-tab-item" node.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>newNode</em></td>
											<td><em>HTMLElement</em></td>
											<td><em>The "smart-tab-item" node to insert.</em></td>
										</tr>
										<tr>
											<td><em>referenceNode</em></td>
											<td><em>HTMLElement</em></td>
											<td><em>The "smart-tab-item" node before which newNode is inserted.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>insertBefore</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.insertBefore(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan33">remove</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Removes a tab and its associated content section.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>index</em></td>
											<td><em>Number</em></td>
											<td><em>The index of the tab to remove.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>remove</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.remove(5); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan34">removeChild</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Removes a child "smart-tab-item" node.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>node</em></td>
											<td><em>HTMLElement</em></td>
											<td><em>The "smart-tab-item" node to remove.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>removeChild</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.removeChild(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan35">select</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Selects a tab.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>index</em></td>
											<td><em>Number</em></td>
											<td><em>The index of the tab to select.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>select</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.select(5); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan36">setFocusable</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Sets whether the element can be focused.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>focusable</em></td>
											<td><em>Boolean</em></td>
											<td><em>Whether the element can be focused.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>setFocusable</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.setFocusable(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan37">update</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Updates a tab and its associated content section.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>index</em></td>
											<td><em>Number</em></td>
											<td><em>The index of the tab to update.</em></td>
										</tr>
										<tr>
											<td><em>label</em></td>
											<td><em>String</em></td>
											<td><em>The new label of the tab. The value can be the id of an HTMLTemplateElement</em></td>
										</tr>
										<tr>
											<td><em>content</em></td>
											<td><em>String/HTMLElement</em></td>
											<td><em>The new content of the tab.</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>update</strong> method. </P>
							<PRE class="prettyprint"> const tabs = document.querySelector('smart-tabs'); </PRE>
 							<PRE class="prettyprint"> tabs.update(5); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>