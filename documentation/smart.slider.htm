<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>Slider API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">coerce</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>With the coerce property true and clicking the track, the thumb and value are moved and set to the nearest value allowed by the interval property. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>coerce</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider coerce&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>coerce</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.coerce = false;</PRE><br/>
 

							<P>Get the <strong>coerce</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let coerce = slider.coerce;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">customInterval</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether custom ticks at (possibly) uneven interval will be plotted. The ticks to be plotted are defined with the property <strong>customTicks</strong>.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>customInterval</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider custom-interval&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>customInterval</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.customInterval = false;</PRE><br/>
 

							<P>Get the <strong>customInterval</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let customInterval = slider.customInterval;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">customTicks</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If <strong>customInterval</strong> is enabled, sets a list of ticks to be plotted. If <strong>coerce</strong> is set to <em>true</em>, the value will snap to these ticks.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>customTicks</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider custom-ticks='['100', '200', '1000', '8000', '10000']'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>customTicks</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.customTicks = [1, 3, 5, 8];</PRE><br/>
 

							<P>Get the <strong>customTicks</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let customTicks = slider.customTicks;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">decimalSeparator</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						"."
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the char to use as the decimal separator in numeric values. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider decimal-separator=','&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>decimalSeparator</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.decimalSeparator = '.';</PRE><br/>
 

							<P>Get the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let decimalSeparator = slider.decimalSeparator;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider disabled&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let disabled = slider.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">interval</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						1
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines what values the thumb snaps to. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>interval</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider interval='2'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>interval</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.interval = 3;</PRE><br/>
 

							<P>Get the <strong>interval</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let interval = slider.interval;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">inverted</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the direction of the slider. If is true - positions of the slider's begin and end are changed. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>inverted</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider inverted&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>inverted</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.inverted = false;</PRE><br/>
 

							<P>Get the <strong>inverted</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let inverted = slider.inverted;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">labelFormatFunction</span>
					</td>
					<td>
						<span>function</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>A callback function that can be used to format the values displayed on the slider labels and tooltip.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>labelFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider label-format-function='function (value) { return value + '%'; }'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>labelFormatFunction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.labelFormatFunction = function (value) { return value + '$'; };</PRE><br/>
 

							<P>Get the <strong>labelFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let labelFormatFunction = slider.labelFormatFunction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">labelsVisibility</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						all
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's label visibility.  Possible values:  'all', 'endPoints', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>labelsVisibility</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider labels-visibility='endPoints'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>labelsVisibility</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.labelsVisibility = 'none';</PRE><br/>
 

							<P>Get the <strong>labelsVisibility</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let labelsVisibility = slider.labelsVisibility;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">language</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						en
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the language. Used in conjunction with the property <strong>messages</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>language</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider language='de'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>language</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.language = 'fr';</PRE><br/>
 

							<P>Get the <strong>language</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let language = slider.language;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">logarithmicScale</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables the usage of logarithmic scale in the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>logarithmicScale</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider logarithmic-scale&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>logarithmicScale</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.logarithmicScale = false;</PRE><br/>
 

							<P>Get the <strong>logarithmicScale</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let logarithmicScale = slider.logarithmicScale;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">max</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						100
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the maximum value of the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider max='20'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>max</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.max = 50;</PRE><br/>
 

							<P>Get the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let max = slider.max;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">mechanicalAction</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						switchWhileDragging
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the type of used mechanical action.  Possible values:  'switchUntilReleased', 'switchWhenReleased', 'switchWhileDragging'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>mechanicalAction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider mechanical-action='switchWhenReleased'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>mechanicalAction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.mechanicalAction = 'switchUntilReleased';</PRE><br/>
 

							<P>Get the <strong>mechanicalAction</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let mechanicalAction = slider.mechanicalAction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "missingReference": "smartSlider: Missing reference to {{files}}.", "significantPrecisionDigits": "smartSlider: the properties significantDigits and precisionDigits cannot be set at the same time." } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider messages='{ "de": { "missingReference": "smartSlider: Fehlende Bezugnahme auf {{files}}.", "significantPrecisionDigits": "smartSlider: Die Eigenschaften significantDigits und precisionDigits koennen nicht gleichzeitig eingestellt werden." } }'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.messages = { "de": { "missingReference": "smartSlider: Fehlende Bezugnahme auf {{files}}.", "significantPrecisionDigits": "smartSlider: Die Eigenschaften significantDigits und precisionDigits koennen nicht gleichzeitig eingestellt werden." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let messages = slider.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">min</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the minimum value of the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider min='20'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>min</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.min = 50;</PRE><br/>
 

							<P>Get the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let min = slider.min;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">orientation</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						horizontal
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the orientation of the widget.  Possible values:  'horizontal', 'vertical'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>orientation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider orientation='vertical'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>orientation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.orientation = 'horizontal';</PRE><br/>
 

							<P>Get the <strong>orientation</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let orientation = slider.orientation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">precisionDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the number of digits after the decimal point. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider precision-digits='5'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>precisionDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.precisionDigits = 6;</PRE><br/>
 

							<P>Get the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let precisionDigits = slider.precisionDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">rangeSlider</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables the slider to be in range mode. If is  set to true, the range is represented between two thumbs. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>rangeSlider</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider range-slider&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>rangeSlider</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.rangeSlider = false;</PRE><br/>
 

							<P>Get the <strong>rangeSlider</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let rangeSlider = slider.rangeSlider;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>When the slider is read only the users cannot drag or click in the fill of the slider.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider readonly&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.readonly = true;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let readonly = slider.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">scalePosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						near
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the position of the widget's scales.  Possible values:  'near', 'far', 'both', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scalePosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider scale-position='far'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>scalePosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.scalePosition = 'both';</PRE><br/>
 

							<P>Get the <strong>scalePosition</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let scalePosition = slider.scalePosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">scaleType</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						floatingPoint
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the type of the slider's scale.  Possible values:  'floatingPoint', 'integer'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scaleType</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider scale-type='integer'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>scaleType</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.scaleType = 'floatingPoint';</PRE><br/>
 

							<P>Get the <strong>scaleType</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let scaleType = slider.scaleType;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">scientificNotation</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables scientific notation.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider scientific-notation&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>scientificNotation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.scientificNotation = true;</PRE><br/>
 

							<P>Get the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let scientificNotation = slider.scientificNotation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">showButtons</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables displaying of the buttons. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>showButtons</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider show-buttons&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>showButtons</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.showButtons = false;</PRE><br/>
 

							<P>Get the <strong>showButtons</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let showButtons = slider.showButtons;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">showTooltip</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables displaying of the tooltip. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>showTooltip</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider show-tooltip&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>showTooltip</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.showTooltip = false;</PRE><br/>
 

							<P>Get the <strong>showTooltip</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let showTooltip = slider.showTooltip;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">showUnit</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables displaying of the units. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider show-unit&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>showUnit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.showUnit = false;</PRE><br/>
 

							<P>Get the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let showUnit = slider.showUnit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">significantDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determining how many significant digits are in a number. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider significant-digits='1'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>significantDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.significantDigits = 2;</PRE><br/>
 

							<P>Get the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let significantDigits = slider.significantDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">ticksPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						scale
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the ticks in smartSlider widget. Possible values:  'scale', 'track'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>ticksPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider ticks-position='track'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>ticksPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.ticksPosition = 'scale';</PRE><br/>
 

							<P>Get the <strong>ticksPosition</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let ticksPosition = slider.ticksPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">ticksVisibility</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						minor
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the visibility of the ticks. Possible values:  'major', 'minor', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>ticksVisibility</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider ticks-visibility='major'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>ticksVisibility</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.ticksVisibility = 'none';</PRE><br/>
 

							<P>Get the <strong>ticksVisibility</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let ticksVisibility = slider.ticksVisibility;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">tooltipPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						near
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the tooltip in smartSlider widget.  Possible values:  'near', 'far'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>tooltipPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider tooltip-position='far'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>tooltipPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.tooltipPosition = 'near';</PRE><br/>
 

							<P>Get the <strong>tooltipPosition</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let tooltipPosition = slider.tooltipPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">unit</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						kg
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the name of unit used in smartSlider widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider unit='mm'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>unit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.unit = 'cm';</PRE><br/>
 

							<P>Get the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let unit = slider.unit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan30">value</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value of the smartSlider widget. The property is used when the rangeSlider property is set to false.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider value='50'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.value = 100;</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let value = slider.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan31">values</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						['0', '100']
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value of the smartSlider widget. The property is used when the rangeSlider property is set to true.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>values</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider values='['10', '50']'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>values</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.values = ['20', '70'];</PRE><br/>
 

							<P>Get the <strong>values</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let values = slider.values;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan32">wordLength</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						int32
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the word length. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>.  Possible values:  'int8', 'uint8', 'int16', 'uint16', 'int32', 'uint32', 'int64', 'uint64'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-slider word-length='int8'&gt;&lt;/smart-slider&gt;</PRE><br/>							<P>Set the <strong>wordLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
 
							<PRE class="prettyprint"> slider.wordLength = 'int16';</PRE><br/>
 

							<P>Get the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider');</PRE>
							<PRE class="prettyprint"> let wordLength = slider.wordLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan33">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value of the slider is changed. 
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartSlider
							</p>
							<p>
								<PRE class="prettyprint"> let slider = document.querySelector('smart-slider'); </PRE>
<PRE class="prettyprint"> slider.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan34">focus</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Focuses the slider. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>focus</strong> method. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider'); </PRE>
 							<PRE class="prettyprint"> slider.focus(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan35">getOptimalSize</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Gets the optimal size of the widget. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>Object</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>getOptimalSize</strong> method. </P>
							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider'); </PRE>
 							<PRE class="prettyprint"> slider.getOptimalSize(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan36">val</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Get/set the value of the slider. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>value</em></td>
											<td><em>string/number</em></td>
											<td><em>The value to be set. If no parameter is passed, returns the displayed value of the slider. </em></td>
										</tr>
										<tr>
											<td><em>suppressValidation</em></td>
											<td><em>boolean</em></td>
											<td><em>If <em>true</em> is passed, the passed value will be set to the slider without validation. </em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>String</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>val</strong> method. </P>
							// Get the value. 							<PRE class="prettyprint"> let slider = document.querySelector('smart-slider'); </PRE>
 							<PRE class="prettyprint"> let val = slider.val(); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>