<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>ToggleButton API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">checked</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the state of the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>checked</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button checked&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>checked</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.checked = false;</PRE><br/>
 

							<P>Get the <strong>checked</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let checked = toggleButton.checked;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">clickMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						release
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the click mode of the button. Possible values:  'hover', 'press', 'release', 'pressAndRelease'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>clickMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button click-mode='hover'&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>clickMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.clickMode = 'release';</PRE><br/>
 

							<P>Get the <strong>clickMode</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let clickMode = toggleButton.clickMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the ratio button.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button disabled&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let disabled = toggleButton.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">innerHTML</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the inner HTML of the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>innerHTML</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button inner-h-t-m-l='Toggle Button Label'&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>innerHTML</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.innerHTML = 'New Toggle Button Label';</PRE><br/>
 

							<P>Get the <strong>innerHTML</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let innerHTML = toggleButton.innerHTML;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">name</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's name.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button name='Name'&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>name</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.name = 'New Name';</PRE><br/>
 

							<P>Get the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let name = toggleButton.name;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If the custom element is readonly, it cannot be interacted with.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button readonly&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.readonly = false;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let readonly = toggleButton.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">rightToLeft</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets a value indicating whether widget's elements are aligned to support locales using right-to-left fonts.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>rightToLeft</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button right-to-left&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>rightToLeft</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.rightToLeft = false;</PRE><br/>
 

							<P>Get the <strong>rightToLeft</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let rightToLeft = toggleButton.rightToLeft;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">value</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						""
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-toggle-button value='Value'&gt;&lt;/smart-toggle-button&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
 
							<PRE class="prettyprint"> toggleButton.value = 'New Value';</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button');</PRE>
							<PRE class="prettyprint"> let value = toggleButton.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the state of the element is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartToggleButton
							</p>
							<p>
								<PRE class="prettyprint"> let toggleButton = document.querySelector('smart-toggle-button'); </PRE>
<PRE class="prettyprint"> toggleButton.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

			</tbody>
		</table>
	</div>
</body>
</html>