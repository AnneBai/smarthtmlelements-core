<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>Tank API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">coerce</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If is set to true all values coerce to the interval, set in the interval property.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>coerce</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank coerce&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>coerce</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.coerce = false;</PRE><br/>
 

							<P>Get the <strong>coerce</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let coerce = tank.coerce;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">customInterval</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether custom ticks at (possibly) uneven interval will be plotted. The ticks to be plotted are defined with the property <strong>customTicks</strong>.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>customInterval</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank custom-interval&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>customInterval</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.customInterval = false;</PRE><br/>
 

							<P>Get the <strong>customInterval</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let customInterval = tank.customInterval;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">customTicks</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If <strong>customInterval</strong> is enabled, sets a list of ticks to be plotted. If <strong>coerce</strong> is set to <em>true</em>, the value will snap to these ticks.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>customTicks</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank custom-ticks='[100, 200, 1000, 8000, 10000]'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>customTicks</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.customTicks = [1, 3, 5, 8];</PRE><br/>
 

							<P>Get the <strong>customTicks</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let customTicks = tank.customTicks;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">dateLabelFormatString</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						d
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the pattern which labels are displayed in when <strong>mode</strong> is <em>'date'</em>.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dateLabelFormatString</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank date-label-format-string='dddd-MMMM-yyyy'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>dateLabelFormatString</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.dateLabelFormatString = 'FP';</PRE><br/>
 

							<P>Get the <strong>dateLabelFormatString</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let dateLabelFormatString = tank.dateLabelFormatString;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">decimalSeparator</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						"."
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the char to use as the decimal separator in numeric values. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank decimal-separator=','&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>decimalSeparator</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.decimalSeparator = '.';</PRE><br/>
 

							<P>Get the <strong>decimalSeparator</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let decimalSeparator = tank.decimalSeparator;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank disabled&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let disabled = tank.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">interval</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						1
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>When cooerce property is true, all values coerce to the interval's value.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>interval</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank interval='2'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>interval</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.interval = 10;</PRE><br/>
 

							<P>Get the <strong>interval</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let interval = tank.interval;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">inverted</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the direction of the tank. If is true - positions of the tank's begin and end are changed.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>inverted</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank inverted&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>inverted</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.inverted = false;</PRE><br/>
 

							<P>Get the <strong>inverted</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let inverted = tank.inverted;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">labelFormatFunction</span>
					</td>
					<td>
						<span>function</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>A callback function that can be used to format the values displayed on the tank labels.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>labelFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank label-format-function='function (value) { return value + '%'; }'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>labelFormatFunction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.labelFormatFunction = function (value) { return value + '$'; };</PRE><br/>
 

							<P>Get the <strong>labelFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let labelFormatFunction = tank.labelFormatFunction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">labelsVisibility</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						all
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the widget's label visibility Possible values:  'all', 'endPoints', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>labelsVisibility</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank labels-visibility='endPoints'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>labelsVisibility</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.labelsVisibility = 'none';</PRE><br/>
 

							<P>Get the <strong>labelsVisibility</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let labelsVisibility = tank.labelsVisibility;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">locale</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						en
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the locale. Used in conjunction with the property <strong>messages</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>locale</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank locale='de'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>locale</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.locale = 'fr';</PRE><br/>
 

							<P>Get the <strong>locale</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let locale = tank.locale;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">logarithmicScale</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables the usage of logarithmic scale in the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>logarithmicScale</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank logarithmic-scale&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>logarithmicScale</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.logarithmicScale = false;</PRE><br/>
 

							<P>Get the <strong>logarithmicScale</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let logarithmicScale = tank.logarithmicScale;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">max</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						100
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the maximum value of the widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank max='20'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>max</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.max = 50;</PRE><br/>
 

							<P>Get the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let max = tank.max;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">mechanicalAction</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						switchWhileDragging
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the type of used mechanical action. Possible values:  'switchUntilReleased', 'switchWhenReleased', 'switchWhileDragging'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>mechanicalAction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank mechanical-action='switchWhenReleased'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>mechanicalAction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.mechanicalAction = 'switchUntilReleased';</PRE><br/>
 

							<P>Get the <strong>mechanicalAction</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let mechanicalAction = tank.mechanicalAction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "missingReference": "{{elementType}}: Missing reference to {{files}}.", "significantPrecisionDigits": "{{elementType}}: the properties significantDigits and precisionDigits cannot be set at the same time.", "invalidMinOrMax": "{{elementType}}: Invalid {{property}} value. Max cannot be lower than Min.", "noInteger": "{{elementType}}: precisionDigits could be set only on floatingPoint scaleType." } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>locale</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank messages='{ "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "significantPrecisionDigits": "{{elementType}}: Die Eigenschaften significantDigits und precisionDigits koennen nicht gleichzeitig eingestellt werden." } }'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.messages = { "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "significantPrecisionDigits": "{{elementType}}: Die Eigenschaften significantDigits und precisionDigits koennen nicht gleichzeitig eingestellt werden." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let messages = tank.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">min</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the minimum value of the widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank min='20'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>min</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.min = 50;</PRE><br/>
 

							<P>Get the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let min = tank.min;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">mode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						numeric
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets whether the widget works with numbers or dates. Possible values:  'numeric', 'date'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>mode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank mode='date'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>mode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.mode = 'numeric';</PRE><br/>
 

							<P>Get the <strong>mode</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let mode = tank.mode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">name</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the element's name, which is used as a reference when the data is submitted.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank name='tank1'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>name</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.name = 'tank2';</PRE><br/>
 

							<P>Get the <strong>name</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let name = tank.name;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">orientation</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						vertical
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the orientation of the widget Possible values:  'horizontal', 'vertical'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>orientation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank orientation='vertical'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>orientation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.orientation = 'horizontal';</PRE><br/>
 

							<P>Get the <strong>orientation</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let orientation = tank.orientation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan19">precisionDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the number of digits after the decimal point. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank precision-digits='5'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>precisionDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.precisionDigits = 6;</PRE><br/>
 

							<P>Get the <strong>precisionDigits</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let precisionDigits = tank.precisionDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan20">readonly</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>If the widgets is readonly, the users cannot iteract with the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank readonly&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>readonly</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.readonly = true;</PRE><br/>
 

							<P>Get the <strong>readonly</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let readonly = tank.readonly;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan21">scalePosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						near
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the position of the widget's scales.  Possible values:  'near', 'far', 'both', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scalePosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank scale-position='far'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>scalePosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.scalePosition = 'both';</PRE><br/>
 

							<P>Get the <strong>scalePosition</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let scalePosition = tank.scalePosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan22">scaleType</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						floatingPoint
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets the type of the tank's scale.  Possible values:  'floatingPoint', 'integer'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scaleType</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank scale-type='integer'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>scaleType</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.scaleType = 'floatingPoint';</PRE><br/>
 

							<P>Get the <strong>scaleType</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let scaleType = tank.scaleType;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan23">scientificNotation</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables scientific notation.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank scientific-notation&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>scientificNotation</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.scientificNotation = true;</PRE><br/>
 

							<P>Get the <strong>scientificNotation</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let scientificNotation = tank.scientificNotation;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan24">showThumbLabel</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables displaying of the thumb label.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>showThumbLabel</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank show-thumb-label&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>showThumbLabel</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.showThumbLabel = true;</PRE><br/>
 

							<P>Get the <strong>showThumbLabel</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let showThumbLabel = tank.showThumbLabel;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan25">showTooltip</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables displaying of the tooltip.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>showTooltip</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank show-tooltip&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>showTooltip</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.showTooltip = true;</PRE><br/>
 

							<P>Get the <strong>showTooltip</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let showTooltip = tank.showTooltip;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan26">showUnit</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables/disables displaying of the units.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank show-unit&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>showUnit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.showUnit = false;</PRE><br/>
 

							<P>Get the <strong>showUnit</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let showUnit = tank.showUnit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan27">significantDigits</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determining how many significant digits are in a number. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank significant-digits='1'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>significantDigits</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.significantDigits = 2;</PRE><br/>
 

							<P>Get the <strong>significantDigits</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let significantDigits = tank.significantDigits;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan28">theme</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the element's visual theme. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>theme</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank theme='material'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>theme</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.theme = 'material-purple';</PRE><br/>
 

							<P>Get the <strong>theme</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let theme = tank.theme;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan29">thumbLabelPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						near
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the thumb label. Possible values:  'near', 'far'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>thumbLabelPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank thumb-label-position='far'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>thumbLabelPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.thumbLabelPosition = 'near';</PRE><br/>
 

							<P>Get the <strong>thumbLabelPosition</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let thumbLabelPosition = tank.thumbLabelPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan30">ticksPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						scale
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the ticks in smartTank widget. Possible values:  'scale', 'track'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>ticksPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank ticks-position='track'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>ticksPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.ticksPosition = 'scale';</PRE><br/>
 

							<P>Get the <strong>ticksPosition</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let ticksPosition = tank.ticksPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan31">ticksVisibility</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						minor
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the visibility of the ticks. Possible values:  'major', 'minor', 'none'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>ticksVisibility</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank ticks-visibility='major'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>ticksVisibility</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.ticksVisibility = 'none';</PRE><br/>
 

							<P>Get the <strong>ticksVisibility</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let ticksVisibility = tank.ticksVisibility;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan32">tooltipPosition</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						near
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the position of the tooltip in smartTank widget. Possible values:  'near', 'far'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>tooltipPosition</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank tooltip-position='far'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>tooltipPosition</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.tooltipPosition = 'near';</PRE><br/>
 

							<P>Get the <strong>tooltipPosition</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let tooltipPosition = tank.tooltipPosition;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan33">unfocusable</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets if the element can be focused.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>unfocusable</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank unfocusable&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>unfocusable</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.unfocusable = false;</PRE><br/>
 

							<P>Get the <strong>unfocusable</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let unfocusable = tank.unfocusable;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan34">unit</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						kg
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the name of unit used in smartTank widget.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank unit='mm'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>unit</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.unit = 'cm';</PRE><br/>
 

							<P>Get the <strong>unit</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let unit = tank.unit;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan35">value</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						0
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the value of the smartTank widget. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank value='50'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.value = 100;</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let value = tank.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan36">wordLength</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						int32
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets the word length. Applicable only when <strong>scaleType</strong> is <em>'integer'</em>. Possible values:  'int8', 'uint8', 'int16', 'uint16', 'int32', 'uint32', 'int64', 'uint64'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-tank word-length='int8'&gt;&lt;/smart-tank&gt;</PRE><br/>							<P>Set the <strong>wordLength</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
 
							<PRE class="prettyprint"> tank.wordLength = 'int16';</PRE><br/>
 

							<P>Get the <strong>wordLength</strong> property. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank');</PRE>
							<PRE class="prettyprint"> let wordLength = tank.wordLength;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan37">change</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the value of the tank is changed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>change</strong> event by type: smartTank
							</p>
							<p>
								<PRE class="prettyprint"> const tank = document.querySelector('smart-tank'); </PRE>
<PRE class="prettyprint"> tank.addEventListener('change', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan38">focus</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Focuses the tank. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>focus</strong> method. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank'); </PRE>
 							<PRE class="prettyprint"> tank.focus(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan39">getOptimalSize</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Gets the optimal size of the widget. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>Object</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>getOptimalSize</strong> method. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank'); </PRE>
 							<PRE class="prettyprint"> tank.getOptimalSize(); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan40">val</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Get/set the value of the tank. 
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>value</em></td>
											<td><em>string/number</em></td>
											<td><em>The value to be set. If no parameter is passed, returns the displayed value of the tank. </em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>String</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>val</strong> method. </P>
							<PRE class="prettyprint"> const tank = document.querySelector('smart-tank'); </PRE>
 							<PRE class="prettyprint"> tank.val(10); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>