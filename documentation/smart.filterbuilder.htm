<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>FilterBuilder API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder disabled&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let disabled = filterBuilder.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Defines field names of the filtered element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder messages='{ 'en': { 'addCondition': 'Add Condition', 'addGroup': 'Add Group', 'and': 'And' } }'&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.messages = { 'en': { 'addCondition': '+ Condition', 'addGroup': '+ Group', 'and': '&&' } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let messages = filterBuilder.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">localization</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Object with localization strings of the different conditions.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>localization</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder localization='{}'&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>localization</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.localization = {};</PRE><br/>
 

							<P>Get the <strong>localization</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let localization = filterBuilder.localization;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">placeholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Placeholder string when the value is not set</p>
							<h4>Code examples</h4>

							<P>Set the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder placeholder=''&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>placeholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.placeholder = '';</PRE><br/>
 

							<P>Get the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let placeholder = filterBuilder.placeholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">theme</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Theme</p>
							<h4>Code examples</h4>

							<P>Set the <strong>theme</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder theme=''&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>theme</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.theme = '';</PRE><br/>
 

							<P>Get the <strong>theme</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let theme = filterBuilder.theme;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">unfocusable</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Unfocusable</p>
							<h4>Code examples</h4>

							<P>Set the <strong>unfocusable</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder unfocusable&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>unfocusable</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.unfocusable = false;</PRE><br/>
 

							<P>Get the <strong>unfocusable</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let unfocusable = filterBuilder.unfocusable;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">value</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Object with filter condition.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder value='["productName", "=", "Projector PlusHD"]'&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>value</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.value = '["productName", "=", "Projector"]';</PRE><br/>
 

							<P>Get the <strong>value</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let value = filterBuilder.value;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">valueFormatFunction</span>
					</td>
					<td>
						<span>function</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Callback used to format all value fields</p>
							<h4>Code examples</h4>

							<P>Set the <strong>valueFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-filter-builder value-format-function='true'&gt;&lt;/smart-filter-builder&gt;</PRE><br/>							<P>Set the <strong>valueFormatFunction</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
 
							<PRE class="prettyprint"> filterBuilder.valueFormatFunction = false;</PRE><br/>
 

							<P>Get the <strong>valueFormatFunction</strong> property. </P>
							<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder');</PRE>
							<PRE class="prettyprint"> let valueFormatFunction = filterBuilder.valueFormatFunction;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">valueChanged</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when a file row has been removed.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>valueChanged</strong> event by type: smartFilterBuilder
							</p>
							<p>
								<PRE class="prettyprint"> const filterBuilder = document.querySelector('smart-filter-builder'); </PRE>
<PRE class="prettyprint"> filterBuilder.addEventListener('valueChanged', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

			</tbody>
		</table>
	</div>
</body>
</html>