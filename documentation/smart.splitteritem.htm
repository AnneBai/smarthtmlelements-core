<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>SplitterItem API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-splitter-item disabled&gt;&lt;/smart-splitter-item&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
 
							<PRE class="prettyprint"> splitterItem.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
							<PRE class="prettyprint"> let disabled = splitterItem.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">collapsed</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines of the item is collapsed or not.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>collapsed</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-splitter-item collapsed&gt;&lt;/smart-splitter-item&gt;</PRE><br/>							<P>Set the <strong>collapsed</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
 
							<PRE class="prettyprint"> splitterItem.collapsed = false;</PRE><br/>
 

							<P>Get the <strong>collapsed</strong> property. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
							<PRE class="prettyprint"> let collapsed = splitterItem.collapsed;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">collapsible</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines of the item can be collapsed. If set to false, the item can't be collapsed</p>
							<h4>Code examples</h4>

							<P>Set the <strong>collapsible</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-splitter-item collapsible&gt;&lt;/smart-splitter-item&gt;</PRE><br/>							<P>Set the <strong>collapsible</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
 
							<PRE class="prettyprint"> splitterItem.collapsible = false;</PRE><br/>
 

							<P>Get the <strong>collapsible</strong> property. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
							<PRE class="prettyprint"> let collapsible = splitterItem.collapsible;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">min</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the min size of the item</p>
							<h4>Code examples</h4>

							<P>Set the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-splitter-item min='50'&gt;&lt;/smart-splitter-item&gt;</PRE><br/>							<P>Set the <strong>min</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
 
							<PRE class="prettyprint"> splitterItem.min = '100';</PRE><br/>
 

							<P>Get the <strong>min</strong> property. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
							<PRE class="prettyprint"> let min = splitterItem.min;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">max</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the max size of the item.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-splitter-item max='250'&gt;&lt;/smart-splitter-item&gt;</PRE><br/>							<P>Set the <strong>max</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
 
							<PRE class="prettyprint"> splitterItem.max = '100';</PRE><br/>
 

							<P>Get the <strong>max</strong> property. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
							<PRE class="prettyprint"> let max = splitterItem.max;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">size</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the size of the item.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>size</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-splitter-item size='250'&gt;&lt;/smart-splitter-item&gt;</PRE><br/>							<P>Set the <strong>size</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
 
							<PRE class="prettyprint"> splitterItem.size = '100';</PRE><br/>
 

							<P>Get the <strong>size</strong> property. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item');</PRE>
							<PRE class="prettyprint"> let size = splitterItem.size;</PRE>
						</div>
					</td>
				</tr>


				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">collapse</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Collapses the item.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>far</em></td>
											<td><em>String</em></td>
											<td><em>If set to true the item will collapse to it's far side ( to the right for vertical splitter and down for horizontal)</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>collapse</strong> method. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item'); </PRE>
 							<PRE class="prettyprint"> splitterItem.collapse(undefined); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">expand</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Expands the item if it's collapsed.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>expand</strong> method. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item'); </PRE>
 							<PRE class="prettyprint"> splitterItem.expand(undefined); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">lock</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Locks the item so it can no longer change it's size.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>lock</strong> method. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item'); </PRE>
 							<PRE class="prettyprint"> splitterItem.lock(undefined); </PRE>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">unlock</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Unlocks a previously locked item.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>None</em></td>
											<td><em></em></td>
											<td><em></em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>unlock</strong> method. </P>
							<PRE class="prettyprint"> const splitterItem = document.querySelector('smart-splitter-item'); </PRE>
 							<PRE class="prettyprint"> splitterItem.unlock(undefined); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>