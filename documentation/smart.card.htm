<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>Card API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">contentHandler</span>
					</td>
					<td>
						<span>function</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>A callback function, used to add more interaction to the card element.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>contentHandler</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-card content-handler='null'&gt;&lt;/smart-card&gt;</PRE><br/>							<P>Set the <strong>contentHandler</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
 
							<PRE class="prettyprint"> card.contentHandler = function(card) { <p>var toggleBtn = card.querySelector('smart-button'), <br /> &nbsp; content = card.querySelector('.card-content'); <br /><br />toggleBtn.addEventListener('click', function () { <br /> &nbsp; content.classList.toggle('hidden'); <br />}); </p>};</PRE><br/>
 

							<P>Get the <strong>contentHandler</strong> property. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
							<PRE class="prettyprint"> let contentHandler = card.contentHandler;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">dataSource</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>This object is used to populate card's template</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-card data-source='{ property : "value" }'&gt;&lt;/smart-card&gt;</PRE><br/>							<P>Set the <strong>dataSource</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
 
							<PRE class="prettyprint"> card.dataSource = { property : 'new value' };</PRE><br/>
 

							<P>Get the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
							<PRE class="prettyprint"> let dataSource = card.dataSource;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Applies disabled state to the card and stops the user iteraction if it is set in contentHandler callback function.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-card disabled&gt;&lt;/smart-card&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
 
							<PRE class="prettyprint"> card.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
							<PRE class="prettyprint"> let disabled = card.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">itemTemplate</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						null
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets custom card template. The template may contain one ot many property placeholders in format {{property}}. These placeholders will be replaced with the values of corresponding properties set in the dataSource object</p>
							<h4>Code examples</h4>

							<P>Set the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-card item-template='templateId1'&gt;&lt;/smart-card&gt;</PRE><br/>							<P>Set the <strong>itemTemplate</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
 
							<PRE class="prettyprint"> card.itemTemplate = 'templateId2';</PRE><br/>
 

							<P>Get the <strong>itemTemplate</strong> property. </P>
							<PRE class="prettyprint"> const card = document.querySelector('smart-card');</PRE>
							<PRE class="prettyprint"> let itemTemplate = card.itemTemplate;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">swipebottom</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered on swipebottom over a card.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>swipebottom</strong> event by type: smartCard
							</p>
							<p>
								<PRE class="prettyprint"> const card = document.querySelector('smart-card'); </PRE>
<PRE class="prettyprint"> card.addEventListener('swipebottom', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">swipeleft</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered on swipeleft over a card.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>swipeleft</strong> event by type: smartCard
							</p>
							<p>
								<PRE class="prettyprint"> const card = document.querySelector('smart-card'); </PRE>
<PRE class="prettyprint"> card.addEventListener('swipeleft', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">swiperight</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered on swiperight over a card.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>swiperight</strong> event by type: smartCard
							</p>
							<p>
								<PRE class="prettyprint"> const card = document.querySelector('smart-card'); </PRE>
<PRE class="prettyprint"> card.addEventListener('swiperight', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">swipetop</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered on swipetop over a card.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>swipetop</strong> event by type: smartCard
							</p>
							<p>
								<PRE class="prettyprint"> const card = document.querySelector('smart-card'); </PRE>
<PRE class="prettyprint"> card.addEventListener('swipetop', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

			</tbody>
		</table>
	</div>
</body>
</html>