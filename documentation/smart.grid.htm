<!DOCTYPE html>
<html lang="en-US">
<head>
	<meta charset="UTF-8">
	<script type="text/javascript" src="js/main.js"></script>
	<link rel="stylesheet" href="styles/smart.apireference.css" type="text/css" />
	<title>Grid API Reference</title>
</head>
<body>
	<div id="properties">
		<h2 class="documentation-top-header">Properties</h2>
		<table class="documentation-table">
			<tbody>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan0">columns</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Data Grid's Columns.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>columns</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-grid columns='["ID", "Country"]'&gt;&lt;/smart-grid&gt;</PRE><br/>							<P>Set the <strong>columns</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns = ["Area", "GDP_Total"];</PRE><br/>
 

							<P>Get the <strong>columns</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let columns = grid.columns;</PRE>
							<h4>Properties</h4>

					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan1">allowSort</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines whether this column can be sorted.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>allowSort</strong> property. </P>							<P>Set the <strong>allowSort</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].allowSort = false;</PRE><br/>
 

							<P>Get the <strong>allowSort</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let allowSort = grid.columns[0].allowSort;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan2">align</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid Column's header cell content alignment. Possible values:  'left', 'center', 'right'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>align</strong> property. </P>							<P>Set the <strong>align</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].align = 'center';</PRE><br/>
 

							<P>Get the <strong>align</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let align = grid.columns[0].align;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan3">cellsAlign</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid Column's cells content alignment. Possible values:  'left', 'center', 'right'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>cellsAlign</strong> property. </P>							<P>Set the <strong>cellsAlign</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].cellsAlign = 'center';</PRE><br/>
 

							<P>Get the <strong>cellsAlign</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let cellsAlign = grid.columns[0].cellsAlign;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan4">label</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid Column's label.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>label</strong> property. </P>							<P>Set the <strong>label</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].label = 'Country';</PRE><br/>
 

							<P>Get the <strong>label</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let label = grid.columns[0].label;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan5">dataField</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the DataBound Field's Name.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dataField</strong> property. </P>							<P>Set the <strong>dataField</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].dataField = 'countryID';</PRE><br/>
 

							<P>Get the <strong>dataField</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let dataField = grid.columns[0].dataField;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan6">dataType</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid Column's data type.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dataType</strong> property. </P>							<P>Set the <strong>dataType</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].dataType = 'boolean';</PRE><br/>
 

							<P>Get the <strong>dataType</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let dataType = grid.columns[0].dataType;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan7">displayField</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the DataBound Field's Display Name.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>displayField</strong> property. </P>							<P>Set the <strong>displayField</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].displayField = 'country';</PRE><br/>
 

							<P>Get the <strong>displayField</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let displayField = grid.columns[0].displayField;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan8">sortOrder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid Column's sort order. Sets or gets the column's data order. Possible values:  'asc', 'desc'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>sortOrder</strong> property. </P>							<P>Set the <strong>sortOrder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].sortOrder = 'desc';</PRE><br/>
 

							<P>Get the <strong>sortOrder</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let sortOrder = grid.columns[0].sortOrder;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan9">sortIndex</span>
					</td>
					<td>
						<span>number</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid Column's sort index. Sets or gets the column's data order. Possible values:  'asc', 'desc'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>sortIndex</strong> property. </P>							<P>Set the <strong>sortIndex</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].sortIndex = 1;</PRE><br/>
 

							<P>Get the <strong>sortIndex</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let sortIndex = grid.columns[0].sortIndex;</PRE>
						</div>
					</td>
				</tr>
					</table>
					<table style="padding-left: 30px;" class="documentation-table">
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan10">visible</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid Column's visibility.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>visible</strong> property. </P>							<P>Set the <strong>visible</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columns[0].visible = false;</PRE><br/>
 

							<P>Get the <strong>visible</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let visible = grid.columns[0].visible;</PRE>
						</div>
					</td>
				</tr>
					</table>

						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan11">columnGroups</span>
					</td>
					<td>
						<span>array</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Data Grid's Columns Groups(Band Columns)</p>
							<h4>Code examples</h4>

							<P>Set the <strong>columnGroups</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-grid column-groups='"{ label: "Name", name: "Name" }, { label: "Totals", name: "Totals" }"'&gt;&lt;/smart-grid&gt;</PRE><br/>							<P>Set the <strong>columnGroups</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.columnGroups = undefined;</PRE><br/>
 

							<P>Get the <strong>columnGroups</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let columnGroups = grid.columnGroups;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan12">dataSource</span>
					</td>
					<td>
						<span>any</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the data source that will be loaded to the ListBox.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-grid data-source='["item 1", "item 2"]'&gt;&lt;/smart-grid&gt;</PRE><br/>							<P>Set the <strong>dataSource</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.dataSource = ["new item 1", "new item 2"];</PRE><br/>
 

							<P>Get the <strong>dataSource</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let dataSource = grid.dataSource;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan13">disabled</span>
					</td>
					<td>
						<span>boolean</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Enables or disables the data grid.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-grid disabled&gt;&lt;/smart-grid&gt;</PRE><br/>							<P>Set the <strong>disabled</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.disabled = false;</PRE><br/>
 

							<P>Get the <strong>disabled</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let disabled = grid.disabled;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan14">messages</span>
					</td>
					<td>
						<span>object</span>
					</td>
					<td>
						{ "en": { "missingReference": "{{elementType}}: Missing reference to {{files}}.", "overridingProperties": "{{elementType}}: Overriding properties {{property1}} and {{property2}} applied. {{property1}} is applied.",  } }
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </p>
							<h4>Code examples</h4>

							<P>Set the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-grid messages='{ "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "overridingProperties": "{{elementType}}: �bergeordnete Eigenschaften {{property1}} und {{property2}} wurden angewendet. {{property1}} angewendet wird." } }'&gt;&lt;/smart-grid&gt;</PRE><br/>							<P>Set the <strong>messages</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.messages = { "de": { "missingReference": "{{elementType}}: Fehlende Bezugnahme auf {{files}}.", "overridingProperties": "{{elementType}}: �bergeordnete Eigenschaften {{property1}} und {{property2}} wurden angewendet. {{property1}} angewendet wird." } };</PRE><br/>
 

							<P>Get the <strong>messages</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let messages = grid.messages;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan15">placeholder</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						No Items
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the widget's place holder, displayed when the widget is empty.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-grid placeholder='Placeholder'&gt;&lt;/smart-grid&gt;</PRE><br/>							<P>Set the <strong>placeholder</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.placeholder = 'New Placeholder';</PRE><br/>
 

							<P>Get the <strong>placeholder</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let placeholder = grid.placeholder;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan16">sortMode</span>
					</td>
					<td>
						<span>string</span>
					</td>
					<td>
						false
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>Determines the Grid's sort mode. Possible values:  'none', 'one', 'many'.</p>
							<h4>Code examples</h4>

							<P>Set the <strong>sortMode</strong> property. </P>
							<PRE class="prettyprint"> &lt;smart-grid sort-mode='one'&gt;&lt;/smart-grid&gt;</PRE><br/>							<P>Set the <strong>sortMode</strong> property by using the HTML Element's instance. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
 
							<PRE class="prettyprint"> grid.sortMode = 'many';</PRE><br/>
 

							<P>Get the <strong>sortMode</strong> property. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid');</PRE>
							<PRE class="prettyprint"> let sortMode = grid.sortMode;</PRE>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Events
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan17">resize</span>
					</td>
					<td>
						<span>Event</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								This event is triggered when the element is resized.
							</p>
							<h4>Code examples</h4>

							<p>
								Bind to the <strong>resize</strong> event by type: smartGrid
							</p>
							<p>
								<PRE class="prettyprint"> const grid = document.querySelector('smart-grid'); </PRE>
<PRE class="prettyprint"> grid.addEventListener('resize', function (event) {
     // event handling code goes here.
 }
 </PRE>							</p>
						</div>
					</td>
				</tr>

				<tr>
					<td colspan="3" style="width: 100%">
						<h2 class="documentation-top-header">
							Methods
						</h2>
					</td>
				</tr>
				<tr>
					<td class="documentation-option-type-click">
						<span id="propertiesSpan18">sortBy</span>
					</td>
					<td>
						<span>Method</span>
					</td>
					<td>
						
					</td>
				</tr>
				<tr>
					<td colspan="3" style="width: 100%">
						<div class="documentation-option-description property-content" style="display: none;">
							<p>
								Sorts the DataGrid.
							</p>
							<div class="methodArgs">
								<table class="arguments">
									<tbody>
										<tr>
											<th>Parameter</th>
											<th>Type</th>
											<th>Description</th>
										</tr>
										<tr>
											<td><em>columnDataField</em></td>
											<td><em>string</em></td>
											<td><em>Column's bound field name</em></td>
										</tr>
										<tr>
											<td><em>sortOrder</em></td>
											<td><em>string</em></td>
											<td><em>Sort order - 'asc', 'desc' or null</em></td>
										</tr>
									</tbody>
								</table>
								<strong>Return Value</strong><br />
								<em>None</em>
							</div>

							<h4>Code examples</h4>
							<P>Invoke the <strong>sortBy</strong> method. </P>
							<PRE class="prettyprint"> const grid = document.querySelector('smart-grid'); </PRE>
 							<PRE class="prettyprint"> grid.sortBy('Country'); </PRE>

						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</body>
</html>